<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Panuon.UI">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Panuon.UI;component/Themes/Control.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <local:ToHalfConverter x:Key="ToHalfConverter"></local:ToHalfConverter>
    <local:ToggleHeightConverter x:Key="ToggleHeightConverter"></local:ToggleHeightConverter>
    <local:ToggleTranslateXConverter x:Key="ToggleTranslateXConverter"></local:ToggleTranslateXConverter>
    <local:ScaleConverter x:Key="ScaleConverter"></local:ScaleConverter>
    <local:TextBoxInnerWidthConverter x:Key="TextBoxInnerWidthConverter"></local:TextBoxInnerWidthConverter>
    <local:TextBoxInnerHeightConverter x:Key="TextBoxInnerHeightConverter"></local:TextBoxInnerHeightConverter>
    <local:HeaderConverter x:Key="HeaderConverter"></local:HeaderConverter>
    <local:IconFontSizeConverter x:Key="IconFontSizeConverter"></local:IconFontSizeConverter>
    <local:GeneralProgressBarConverter x:Key="GeneralProgressBarConverter"></local:GeneralProgressBarConverter>
    <local:BubbleConverter x:Key="BubbleConverter"></local:BubbleConverter>
    <local:WidthToMarginConverter x:Key="WidthToMarginConverter"></local:WidthToMarginConverter>
    <local:HeightToMarginConverter x:Key="HeightToMarginConverter"></local:HeightToMarginConverter>
    <local:RingProgressBarConverter x:Key="RingProgressBarConverter"></local:RingProgressBarConverter>
    <local:MarginToWidthConverter x:Key="MarginToWidthConverter"></local:MarginToWidthConverter>
    <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"></local:BooleanToVisibilityConverter>
    <local:DropDownBorderPathConverter x:Key="DropDownBorderPathConverter"></local:DropDownBorderPathConverter>

    <Style TargetType="{x:Type local:PUResizeGrid}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PUResizeGrid}">
                    <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid>
                            <local:ResizeThumb Height="5"
                                               Cursor="SizeNS"
                                               BorderBrush="Transparent"
                                               BorderThickness="5"
                                               Margin="0 -5 0 0"
                                               VerticalAlignment="Top"
                                               HorizontalAlignment="Stretch"
                                               IsSquare="{Binding IsSquare,RelativeSource={RelativeSource AncestorType=UserControl}}" />
                            <local:ResizeThumb Width="5"
                                               Cursor="SizeWE"
                                               Margin="-5 0 0 0"
                                               BorderBrush="Transparent"
                                               BorderThickness="5"
                                               VerticalAlignment="Stretch"
                                               HorizontalAlignment="Left"
                                               IsSquare="{Binding IsSquare,RelativeSource={RelativeSource AncestorType=UserControl}}" />
                            <local:ResizeThumb Width="5"
                                               Cursor="SizeWE"
                                               Margin="0 0 -5 0"
                                               BorderBrush="Transparent"
                                               BorderThickness="5"
                                               VerticalAlignment="Stretch"
                                               HorizontalAlignment="Right"
                                               IsSquare="{Binding IsSquare,RelativeSource={RelativeSource AncestorType=UserControl}}" />
                            <local:ResizeThumb Height="5"
                                               Cursor="SizeNS"
                                               Margin="0 0 0 -5"
                                               BorderBrush="Transparent"
                                               BorderThickness="5"
                                               VerticalAlignment="Bottom"
                                               HorizontalAlignment="Stretch"
                                               IsSquare="{Binding IsSquare,RelativeSource={RelativeSource AncestorType=UserControl}}" />
                            <local:ResizeThumb Width="5"
                                               Height="5"
                                               Cursor="SizeNWSE"
                                               Margin="-5 -5 0 0"
                                               BorderBrush="Transparent"
                                               BorderThickness="5"
                                               VerticalAlignment="Top"
                                               HorizontalAlignment="Left"
                                               IsSquare="{Binding IsSquare,RelativeSource={RelativeSource AncestorType=UserControl}}" />
                            <local:ResizeThumb Width="5"
                                               Height="5"
                                               Cursor="SizeNESW"
                                               Margin="0 -5 -5 0"
                                               BorderBrush="Transparent"
                                               BorderThickness="5"
                                               VerticalAlignment="Top"
                                               HorizontalAlignment="Right"
                                               IsSquare="{Binding IsSquare,RelativeSource={RelativeSource AncestorType=UserControl}}" />
                            <local:ResizeThumb Width="5"
                                               Height="5"
                                               Cursor="SizeNESW"
                                               Margin="-5 0 0 -5"
                                               BorderBrush="Transparent"
                                               BorderThickness="5"
                                               VerticalAlignment="Bottom"
                                               HorizontalAlignment="Left"
                                               IsSquare="{Binding IsSquare,RelativeSource={RelativeSource AncestorType=UserControl}}" />
                            <local:ResizeThumb Width="5"
                                               Height="5"
                                               Cursor="SizeNWSE"
                                               Margin="0 0 -5 -5"
                                               BorderBrush="Transparent"
                                               BorderThickness="5"
                                               VerticalAlignment="Bottom"
                                               HorizontalAlignment="Right"
                                               IsSquare="{Binding IsSquare,RelativeSource={RelativeSource AncestorType=UserControl}}" />
                        </Grid>
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:PUResizeContainer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PUResizeContainer}">
                    <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                        <Grid x:Name="GrdResizeGroup">
                            <local:ResizeThumb Height="5"
                                               Tag="Top"
                                               Cursor="SizeNS"
                                               BorderBrush="Transparent"
                                               BorderThickness="5"
                                               Margin="0 -5 0 0"
                                               VerticalAlignment="Top"
                                               HorizontalAlignment="Stretch"
                                               IsSquare="{TemplateBinding IsSquare}"
                                               LimitInParent="{TemplateBinding LimitInParent}" />
                            <local:ResizeThumb Width="5"
                                               Tag="Left"
                                               Cursor="SizeWE"
                                               Margin="-5 0 0 0"
                                               BorderBrush="Transparent"
                                               BorderThickness="5"
                                               VerticalAlignment="Stretch"
                                               HorizontalAlignment="Left"
                                               IsSquare="{TemplateBinding IsSquare}"
                                               LimitInParent="{TemplateBinding LimitInParent}" />
                            <local:ResizeThumb Width="5"
                                               Tag="Right"
                                               Cursor="SizeWE"
                                               Margin="0 0 -5 0"
                                               BorderBrush="Transparent"
                                               BorderThickness="5"
                                               VerticalAlignment="Stretch"
                                               HorizontalAlignment="Right"
                                               IsSquare="{TemplateBinding IsSquare}"
                                               LimitInParent="{TemplateBinding LimitInParent}" />
                            <local:ResizeThumb Height="5"
                                               Tag="Bottom"
                                               Cursor="SizeNS"
                                               Margin="0 0 0 -5"
                                               BorderBrush="Transparent"
                                               BorderThickness="5"
                                               VerticalAlignment="Bottom"
                                               HorizontalAlignment="Stretch"
                                               IsSquare="{TemplateBinding IsSquare}"
                                               LimitInParent="{TemplateBinding LimitInParent}" />
                            <local:ResizeThumb Width="5"
                                               Tag="TopLeft"
                                               Height="5"
                                               Cursor="SizeNWSE"
                                               Margin="-5 -5 0 0"
                                               BorderBrush="Transparent"
                                               BorderThickness="5"
                                               VerticalAlignment="Top"
                                               HorizontalAlignment="Left"
                                               IsSquare="{TemplateBinding IsSquare}"
                                               LimitInParent="{TemplateBinding LimitInParent}" />
                            <local:ResizeThumb Width="5"
                                               Tag="TopRight"
                                               Height="5"
                                               Cursor="SizeNESW"
                                               Margin="0 -5 -5 0"
                                               BorderBrush="Transparent"
                                               BorderThickness="5"
                                               VerticalAlignment="Top"
                                               HorizontalAlignment="Right"
                                               IsSquare="{TemplateBinding IsSquare}"
                                               LimitInParent="{TemplateBinding LimitInParent}" />
                            <local:ResizeThumb Width="5"
                                               Tag="BottomLeft"
                                               Height="5"
                                               Cursor="SizeNESW"
                                               Margin="-5 0 0 -5"
                                               BorderBrush="Transparent"
                                               BorderThickness="5"
                                               VerticalAlignment="Bottom"
                                               HorizontalAlignment="Left"
                                               IsSquare="{TemplateBinding IsSquare}"
                                               LimitInParent="{TemplateBinding LimitInParent}" />
                            <local:ResizeThumb Width="5"
                                               Tag="BottomRight"
                                               Height="5"
                                               Cursor="SizeNWSE"
                                               Margin="0 0 -5 -5"
                                               BorderBrush="Transparent"
                                               BorderThickness="5"
                                               VerticalAlignment="Bottom"
                                               HorizontalAlignment="Right"
                                               IsSquare="{TemplateBinding IsSquare}"
                                               LimitInParent="{TemplateBinding LimitInParent}" />
                        </Grid>
                        <ContentPresenter Content="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CanResize"
                                 Value="False">
                            <Setter TargetName="GrdResizeGroup"
                                    Property="IsEnabled"
                                    Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:DragableThumb}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DragableThumb}">
                    <Border Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:PUCard}">
        <Style.Setters>
            <Setter Property="BorderBrush"
                    Value="LightGray" />
            <Setter Property="BorderThickness"
                    Value="1"></Setter>
            <Setter Property="Background"
                    Value="White" />
            <Setter Property="ShadowColor"
                    Value="Transparent" />
            <Setter Property="HeaderHeight"
                    Value="40" />
            <Setter Property="VerticalContentAlignment"
                    Value="Stretch"></Setter>
            <Setter Property="HorizontalContentAlignment"
                    Value="Stretch" />
            <Setter Property="FocusVisualStyle"
                    Value="{x:Null}"></Setter>
            <Setter Property="Padding"
                    Value="5"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:PUCard}">
                        <Grid>
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=UserControl}}">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0"
                                                      BlurRadius="5"
                                                      Color="{Binding ShadowColor,RelativeSource={RelativeSource AncestorType=UserControl}}"></DropShadowEffect>
                                </Border.Effect>
                            </Border>
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="{Binding HeaderHeight,RelativeSource={RelativeSource AncestorType=UserControl}}"></RowDefinition>
                                    <RowDefinition Height="*"></RowDefinition>
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <Label Content="{Binding Icon,RelativeSource={RelativeSource AncestorType=UserControl}}"
                                           FontFamily="{DynamicResource IconFont}"
                                           FontSize="{TemplateBinding FontSize,Converter={StaticResource IconFontSizeConverter}}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Left"></Label>
                                    <ContentPresenter Grid.Column="1"
                                                      ContentSource="Header"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Left" />
                                    <local:PUButton x:Name="btnDetail"
                                                    Grid.Column="2"
                                                    ButtonStyle="Link"
                                                    Content="详情 >"
                                                    Foreground="#AAAAAA"
                                                    Tag="PART_Detail"
                                                    CoverBrush="#999999"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"></local:PUButton>
                                </Grid>
                                <ContentPresenter Grid.Row="1"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content" />
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDetailButtonShow"
                                     Value="False">
                                <Trigger.Setters>
                                    <Setter TargetName="btnDetail"
                                            Property="Visibility"
                                            Value="Collapsed" />
                                </Trigger.Setters>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <Style TargetType="{x:Type local:DropDown}">
        <Setter Property="SnapsToDevicePixels"
                Value="False" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Foreground"
                Value="#3E3E3E"></Setter>
        <Setter Property="Background"
                Value="White"></Setter>
        <Setter Property="BorderBrush"
                Value="Transparent"></Setter>
        <Setter Property="BorderThickness"
                Value="1"></Setter>
        <Setter Property="Padding"
                Value="5,0,0,0"></Setter>
        <Setter Property="ShadowColor"
                Value="#DDDDDD" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="CornerRadius"
                Value="3" />
        <Setter Property="DropDownPlacement"
                Value="LeftBottom" />
        <Style.Triggers>
            <Trigger Property="DropDownPlacement"
                     Value="LeftBottom">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:DropDown}">
                            <Grid>
                                <Grid>
                                    <ContentPresenter x:Name="Content"
                                                      ContentSource="Content"
                                                      IsHitTestVisible="False" />
                                </Grid>
                                <ToggleButton x:Name="ToggleButton"
                                              Focusable="false"
                                              IsChecked="{Binding IsOpen,RelativeSource={RelativeSource AncestorType=local:DropDown},Mode=TwoWay}"
                                              ClickMode="Press"
                                              Foreground="{TemplateBinding Foreground}"
                                              Background="Transparent"
                                              BorderBrush="Transparent"
                                              BorderThickness="0">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Grid Background="Transparent" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <local:NotTopMostPopup Placement="Left"
                                                       IsOpen="{Binding IsOpen,RelativeSource={RelativeSource AncestorType=local:DropDown},Mode=TwoWay}"
                                                       x:Name="Popup"
                                                       PlacementTarget="{Binding ElementName=ToggleButton}"
                                                       HorizontalOffset="{Binding ActualWidth, ElementName=ToggleButton}"
                                                       VerticalOffset="{Binding ActualHeight, ElementName=ToggleButton}"
                                                       Focusable="False"
                                                       Tag="{Binding ElementName=ToggleButton}"
                                                       AllowsTransparency="True"
                                                       PopupAnimation="Slide">
                                    <Grid x:Name="DropDown"
                                          Margin="1,1,1,10">
                                        <Path x:Name="Path"
                                              Fill="{TemplateBinding Background}"
                                              Stroke="{TemplateBinding BorderBrush}"
                                              StrokeThickness="{TemplateBinding BorderThickness}">
                                            <Path.Data>
                                                <MultiBinding Converter="{StaticResource DropDownBorderPathConverter}">
                                                    <Binding Path="ActualWidth"
                                                             ElementName="Path" />
                                                    <Binding Path="ActualHeight"
                                                             ElementName="Path" />
                                                    <Binding Path="ActualWidth"
                                                             ElementName="Content" />
                                                    <Binding Path="ActualHeight"
                                                             ElementName="Content" />
                                                    <Binding Path="DropDownPlacement"
                                                             RelativeSource="{RelativeSource AncestorType=local:DropDown}" />
                                                    <Binding Path="CornerRadius"
                                                             RelativeSource="{RelativeSource AncestorType=local:DropDown}" />
                                                </MultiBinding>
                                            </Path.Data>
                                            <Path.Effect>
                                                <DropShadowEffect ShadowDepth="0"
                                                                  BlurRadius="8"
                                                                  Opacity="1"
                                                                  Color="{Binding ShadowColor,RelativeSource={RelativeSource AncestorType=local:DropDown}}"></DropShadowEffect>
                                            </Path.Effect>
                                        </Path>
                                        <Grid Margin="0,7,0,0">
                                            <ContentPresenter x:Name="Child"
                                                              ContentSource="Child" />
                                        </Grid>
                                    </Grid>
                                </local:NotTopMostPopup>
                            </Grid>
                            <ControlTemplate.Triggers>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Trigger>
            <Trigger Property="DropDownPlacement"
                     Value="RightBottom">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:DropDown}">
                            <Grid>
                                <Grid>
                                    <ContentPresenter x:Name="Content"
                                                      ContentSource="Content"
                                                      IsHitTestVisible="False" />
                                </Grid>
                                <ToggleButton x:Name="ToggleButton"
                                              Focusable="false"
                                              IsChecked="{Binding Path=IsOpen, Mode=TwoWay, ElementName=Popup}"
                                              ClickMode="Press"
                                              Foreground="{TemplateBinding Foreground}"
                                              Background="Transparent"
                                              BorderBrush="Transparent"
                                              BorderThickness="0">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Grid Background="Transparent" />
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <local:NotTopMostPopup Placement="Bottom"
                                                       x:Name="Popup"
                                                       PlacementTarget="{Binding ElementName=ToggleButton}"
                                                       Focusable="False"
                                                       Tag="{Binding ElementName=ToggleButton}"
                                                       AllowsTransparency="True"
                                                       PopupAnimation="Slide">
                                    <Grid x:Name="DropDown"
                                          Margin="1,1,1,10">
                                        <Path x:Name="Path"
                                              Fill="{TemplateBinding Background}"
                                              Stroke="{TemplateBinding BorderBrush}"
                                              StrokeThickness="{TemplateBinding BorderThickness}">
                                            <Path.Data>
                                                <MultiBinding Converter="{StaticResource DropDownBorderPathConverter}">
                                                    <Binding Path="ActualWidth"
                                                             ElementName="Path" />
                                                    <Binding Path="ActualHeight"
                                                             ElementName="Path" />
                                                    <Binding Path="ActualWidth"
                                                             ElementName="Content" />
                                                    <Binding Path="ActualHeight"
                                                             ElementName="Content" />
                                                    <Binding Path="DropDownPlacement"
                                                             RelativeSource="{RelativeSource AncestorType=local:DropDown}" />
                                                    <Binding Path="CornerRadius"
                                                             RelativeSource="{RelativeSource AncestorType=local:DropDown}" />
                                                </MultiBinding>
                                            </Path.Data>
                                            <Path.Effect>
                                                <DropShadowEffect ShadowDepth="0"
                                                                  BlurRadius="5"
                                                                  Opacity="1"
                                                                  Color="{Binding ShadowColor,RelativeSource={RelativeSource AncestorType=local:DropDown}}"></DropShadowEffect>
                                            </Path.Effect>
                                        </Path>
                                        <Grid>
                                            <ContentPresenter x:Name="Child"
                                                              ContentSource="Child"
                                                              IsHitTestVisible="False" />
                                        </Grid>
                                    </Grid>
                                </local:NotTopMostPopup>
                            </Grid>
                            <ControlTemplate.Triggers>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Trigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:PUWindow}">
        <Setter Property="Background"
                Value="White"></Setter>
        <Setter Property="Foreground"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="BorderBrush"
                Value="Gray"></Setter>
        <Setter Property="BorderThickness"
                Value="1"></Setter>
        <Setter Property="WindowStyle"
                Value="None"></Setter>
        <Setter Property="AllowsTransparency"
                Value="True"></Setter>
        <Setter Property="FontSize"
                Value="14"></Setter>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Setter Property="NavbarBackground"
                Value="White" />
        <Setter Property="NavbarHeight"
                Value="30" />
        <Setter Property="NavButtonHeight"
                Value="30" />
        <Setter Property="NavButtonWidth"
                Value="40" />
        <Style.Triggers>
            <Trigger Property="AnimationStyle"
                     Value="Fade">
                <Setter Property="Opacity"
                        Value="0"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUWindow}">
                            <Grid>
                                <Border x:Name="bdrOuter"
                                        Margin="5"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Window}}">
                                    <Grid x:Name="grdContent"
                                          Opacity="0">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="{Binding NavbarHeight,RelativeSource={RelativeSource AncestorType=Window}}"></RowDefinition>
                                                <RowDefinition Height="*"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <Grid x:Name="grdNavbar"
                                                  Background="{Binding NavbarBackground,RelativeSource={RelativeSource AncestorType=Window}}">
                                                <StackPanel Orientation="Horizontal"
                                                            HorizontalAlignment="Left"
                                                            Height="{Binding NavbarHeight,RelativeSource={RelativeSource AncestorType=Window}}">
                                                    <Label Content="{Binding Icon,RelativeSource={RelativeSource AncestorType=Window}}"
                                                           Margin="3,0,0,0"
                                                           VerticalContentAlignment="Center"
                                                           HorizontalContentAlignment="Left"
                                                           FontSize="{TemplateBinding FontSize}"
                                                           FontFamily="{DynamicResource IconFont}"
                                                           Foreground="{TemplateBinding Foreground}"></Label>
                                                    <Label VerticalContentAlignment="Center"
                                                           HorizontalContentAlignment="Left"
                                                           FontSize="{TemplateBinding FontSize}"
                                                           FontFamily="{DynamicResource IconFont}"
                                                           Foreground="{TemplateBinding Foreground}">
                                                        <Label.Content>
                                                            <MultiBinding Converter="{StaticResource HeaderConverter}">
                                                                <Binding Path="Header"
                                                                         RelativeSource="{RelativeSource AncestorType=Window}"></Binding>
                                                                <Binding Path="Title"
                                                                         RelativeSource="{RelativeSource AncestorType=Window}"></Binding>
                                                            </MultiBinding>
                                                        </Label.Content>
                                                    </Label>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal"
                                                            HorizontalAlignment="Right"
                                                            VerticalAlignment="Top"
                                                            Height="{Binding NavButtonHeight,RelativeSource={RelativeSource AncestorType=Window}}">
                                                    <local:PUButton x:Name="btnMin"
                                                                    Visibility="Collapsed"
                                                                    Content="-"
                                                                    Command="{Binding MinCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                    ButtonStyle="Hollow"
                                                                    BorderBrush="Transparent"
                                                                    CoverBrush="#99999999"
                                                                    Foreground="{TemplateBinding Foreground}"
                                                                    Width="{Binding NavButtonWidth,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    Height="{Binding NavButtonHeight,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    HorizontalAlignment="Right"
                                                                    FontSize="{TemplateBinding FontSize,Converter={StaticResource IconFontSizeConverter}}"></local:PUButton>
                                                    <local:PUButton x:Name="btnMax"
                                                                    Visibility="Collapsed"
                                                                    Content="□"
                                                                    Command="{Binding MaxCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                    ButtonStyle="Hollow"
                                                                    BorderBrush="Transparent"
                                                                    CoverBrush="#99999999"
                                                                    Foreground="{TemplateBinding Foreground}"
                                                                    Width="{Binding NavButtonWidth,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    Height="{Binding NavButtonHeight,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    HorizontalAlignment="Right"
                                                                    FontSize="{TemplateBinding FontSize,Converter={StaticResource IconFontSizeConverter}}"></local:PUButton>
                                                    <local:PUButton x:Name="btnClose"
                                                                    Visibility="Collapsed"
                                                                    Content="×"
                                                                    Command="{Binding CloseCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                    ButtonStyle="Hollow"
                                                                    BorderBrush="Transparent"
                                                                    CoverBrush="#CCC53434"
                                                                    Foreground="{TemplateBinding Foreground}"
                                                                    Width="{Binding NavButtonWidth,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    Height="{Binding NavButtonHeight,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    HorizontalAlignment="Right"
                                                                    FontSize="{TemplateBinding FontSize,Converter={StaticResource IconFontSizeConverter}}" />
                                                </StackPanel>
                                            </Grid>
                                            <Grid Grid.Row="1"
                                                  x:Name="grdContainer">
                                                <AdornerDecorator>
                                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                                </AdornerDecorator>
                                            </Grid>
                                        </Grid>
                                        <Border x:Name="bdrCover"
                                                Background="Black"
                                                BorderThickness="0"
                                                CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Window}}"
                                                Opacity="0"
                                                IsHitTestVisible="False" />
                                        <Border x:Name="bdrAwaitCover"
                                                Background="Black"
                                                BorderThickness="0"
                                                CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Window}}"
                                                Opacity="0"
                                                IsHitTestVisible="False" />
                                        <local:PULoading x:Name="loading"
                                                         Foreground="#CCFFFFFF"
                                                         Height="100"
                                                         Width="100"></local:PULoading>
                                    </Grid>
                                </Border>
                                <Grid x:Name="grdResize"
                                      Visibility="Collapsed">
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               VerticalAlignment="Top"
                                               Height="5"
                                               x:Name="Top"
                                               Margin="5,0,5,0" />
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               x:Name="Bottom"
                                               Height="5"
                                               VerticalAlignment="Bottom"
                                               Margin="5,0,5,0" />
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               HorizontalAlignment="Left"
                                               Margin="0,5,0,5"
                                               Width="5"
                                               x:Name="Left" />
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               Margin="0,5,0,5"
                                               Width="5"
                                               HorizontalAlignment="Right"
                                               x:Name="Right" />
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Bottom"
                                               Width="5"
                                               Height="5"
                                               x:Name="BottomLeft" />
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               VerticalAlignment="Bottom"
                                               Height="5"
                                               Width="5"
                                               HorizontalAlignment="Right"
                                               x:Name="BottomRight" />
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               HorizontalAlignment="Right"
                                               Width="5"
                                               Height="5"
                                               VerticalAlignment="Top"
                                               x:Name="TopRight" />
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               HorizontalAlignment="Left"
                                               Width="6"
                                               VerticalAlignment="Top"
                                               Height="5"
                                               x:Name="TopLeft" />
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="BeginLoadStoryboard">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0:0:0.3">
                                            </DoubleAnimation>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grdContent"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.4"
                                                                        Value="1">
                                                </DiscreteDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="SkipLoadStoryboard">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="1">
                                                </DiscreteDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grdContent"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="1">
                                                </DiscreteDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="BeginCloseStoryboard">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             To="0"
                                                             Duration="0:0:0.3">
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <Trigger Property="AllowShowDelay"
                                         Value="False">
                                    <Setter TargetName="grdContent"
                                            Property="Opacity"
                                            Value="1" />
                                </Trigger>
                                <Trigger Property="IsCoverMaskShow"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.7"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="bdrCover"
                                                                                Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="True" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="bdrCover"
                                                                                Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="False" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsAwaitShow"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrAwaitCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.7"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="bdrAwaitCover"
                                                                                Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="True" />
                                                </BooleanAnimationUsingKeyFrames>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="loading"
                                                                                Storyboard.TargetProperty="IsRunning">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0.1"
                                                                             Value="True" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrAwaitCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="bdrAwaitCover"
                                                                                Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="False" />
                                                </BooleanAnimationUsingKeyFrames>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="loading"
                                                                                Storyboard.TargetProperty="IsRunning">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="False" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>

                                </Trigger>
                                <Trigger Property="ResizeMode"
                                         Value="CanMinimize">
                                    <Setter TargetName="btnMax"
                                            Property="IsEnabled"
                                            Value="False"></Setter>
                                </Trigger>
                                <Trigger Property="ResizeMode"
                                         Value="NoResize">
                                    <Setter TargetName="btnMin"
                                            Property="IsEnabled"
                                            Value="False"></Setter>
                                    <Setter TargetName="btnMax"
                                            Property="IsEnabled"
                                            Value="False"></Setter>
                                </Trigger>
                                <Trigger Property="ResizeMode"
                                         Value="CanResize">
                                    <Setter TargetName="grdResize"
                                            Property="Visibility"
                                            Value="Visible" />
                                </Trigger>
                                <Trigger Property="NavButtonVisibility"
                                         Value="Visible">
                                    <Setter TargetName="btnMin"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                    <Setter TargetName="btnMax"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                    <Setter TargetName="btnClose"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="AnimationStyle"
                     Value="Gradual">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUWindow}">
                            <Grid>
                                <Border x:Name="bdrOuter"
                                        Margin="5"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Window}}">
                                    <Border.OpacityMask>
                                        <LinearGradientBrush StartPoint="0,0"
                                                             EndPoint="0,1">
                                            <GradientStopCollection>
                                                <GradientStop x:Name="offset1"
                                                              Offset="0"
                                                              Color="White"></GradientStop>
                                                <GradientStop x:Name="offset2"
                                                              Offset="0"
                                                              Color="Transparent"></GradientStop>
                                            </GradientStopCollection>
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                    <Grid x:Name="grdContent"
                                          Opacity="0">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="{Binding NavbarHeight,RelativeSource={RelativeSource AncestorType=Window}}"></RowDefinition>
                                                <RowDefinition Height="*"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <Grid x:Name="grdNavbar"
                                                  Background="{Binding NavbarBackground,RelativeSource={RelativeSource AncestorType=Window}}">
                                                <StackPanel Orientation="Horizontal"
                                                            HorizontalAlignment="Left"
                                                            Height="{Binding NavbarHeight,RelativeSource={RelativeSource AncestorType=Window}}">
                                                    <Label Content="{Binding Icon,RelativeSource={RelativeSource AncestorType=Window}}"
                                                           Margin="3,0,0,0"
                                                           VerticalContentAlignment="Center"
                                                           HorizontalContentAlignment="Left"
                                                           FontSize="{TemplateBinding FontSize}"
                                                           FontFamily="{DynamicResource IconFont}"
                                                           Foreground="{TemplateBinding Foreground}"></Label>
                                                    <Label VerticalContentAlignment="Center"
                                                           HorizontalContentAlignment="Left"
                                                           FontSize="{TemplateBinding FontSize}"
                                                           FontFamily="{DynamicResource IconFont}"
                                                           Foreground="{TemplateBinding Foreground}">
                                                        <Label.Content>
                                                            <MultiBinding Converter="{StaticResource HeaderConverter}">
                                                                <Binding Path="Header"
                                                                         RelativeSource="{RelativeSource AncestorType=Window}"></Binding>
                                                                <Binding Path="Title"
                                                                         RelativeSource="{RelativeSource AncestorType=Window}"></Binding>
                                                            </MultiBinding>
                                                        </Label.Content>
                                                    </Label>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal"
                                                            HorizontalAlignment="Right"
                                                            VerticalAlignment="Top"
                                                            Height="{Binding NavButtonHeight,RelativeSource={RelativeSource AncestorType=Window}}">
                                                    <local:PUButton x:Name="btnMin"
                                                                    Visibility="Hidden"
                                                                    Content="-"
                                                                    Command="{Binding MinCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                    ButtonStyle="Hollow"
                                                                    BorderBrush="Transparent"
                                                                    CoverBrush="#99999999"
                                                                    Foreground="{TemplateBinding Foreground}"
                                                                    Width="{Binding NavButtonWidth,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    Height="{Binding NavButtonHeight,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    HorizontalAlignment="Right"
                                                                    FontSize="{TemplateBinding FontSize,Converter={StaticResource IconFontSizeConverter}}"></local:PUButton>
                                                    <local:PUButton x:Name="btnMax"
                                                                    Visibility="Hidden"
                                                                    Content="□"
                                                                    Command="{Binding MaxCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                    ButtonStyle="Hollow"
                                                                    BorderBrush="Transparent"
                                                                    CoverBrush="#99999999"
                                                                    Foreground="{TemplateBinding Foreground}"
                                                                    Width="{Binding NavButtonWidth,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    Height="{Binding NavButtonHeight,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    HorizontalAlignment="Right"
                                                                    FontSize="{TemplateBinding FontSize,Converter={StaticResource IconFontSizeConverter}}"></local:PUButton>
                                                    <local:PUButton x:Name="btnClose"
                                                                    Visibility="Hidden"
                                                                    Content="×"
                                                                    Command="{Binding CloseCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                    ButtonStyle="Hollow"
                                                                    BorderBrush="Transparent"
                                                                    CoverBrush="#CCC53434"
                                                                    Foreground="{TemplateBinding Foreground}"
                                                                    Width="{Binding NavButtonWidth,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    Height="{Binding NavButtonHeight,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    HorizontalAlignment="Right"
                                                                    FontSize="{TemplateBinding FontSize,Converter={StaticResource IconFontSizeConverter}}" />
                                                </StackPanel>
                                            </Grid>
                                            <Grid Grid.Row="1"
                                                  x:Name="grdContainer">
                                                <AdornerDecorator>
                                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                                </AdornerDecorator>
                                            </Grid>
                                        </Grid>
                                        <Border x:Name="bdrCover"
                                                Background="Black"
                                                BorderThickness="0"
                                                CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Window}}"
                                                Opacity="0"
                                                IsHitTestVisible="False" />
                                        <Border x:Name="bdrAwaitCover"
                                                Background="Black"
                                                BorderThickness="0"
                                                CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Window}}"
                                                Opacity="0"
                                                IsHitTestVisible="False" />
                                        <local:PULoading x:Name="loading"
                                                         Foreground="#CCFFFFFF"
                                                         Height="100"
                                                         Width="100"></local:PULoading>
                                    </Grid>
                                </Border>
                                <Grid x:Name="grdResize"
                                      Visibility="Collapsed">
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               VerticalAlignment="Top"
                                               Height="5"
                                               x:Name="Top"
                                               Margin="5,0,5,0" />
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               x:Name="Bottom"
                                               Height="5"
                                               VerticalAlignment="Bottom"
                                               Margin="5,0,5,0" />
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               HorizontalAlignment="Left"
                                               Margin="0,5,0,5"
                                               Width="5"
                                               x:Name="Left" />
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               Margin="0,5,0,5"
                                               Width="5"
                                               HorizontalAlignment="Right"
                                               x:Name="Right" />
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Bottom"
                                               Width="5"
                                               Height="5"
                                               x:Name="BottomLeft" />
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               VerticalAlignment="Bottom"
                                               Height="5"
                                               Width="5"
                                               HorizontalAlignment="Right"
                                               x:Name="BottomRight" />
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               HorizontalAlignment="Right"
                                               Width="5"
                                               Height="5"
                                               VerticalAlignment="Top"
                                               x:Name="TopRight" />
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               HorizontalAlignment="Left"
                                               Width="6"
                                               VerticalAlignment="Top"
                                               Height="5"
                                               x:Name="TopLeft" />
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="BeginLoadStoryboard">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="offset2"
                                                             Storyboard.TargetProperty="Offset"
                                                             To="1"
                                                             Duration="0:0:0.2"></DoubleAnimation>
                                            <ColorAnimation Storyboard.TargetName="offset2"
                                                            Storyboard.TargetProperty="Color"
                                                            To="White"
                                                            Duration="0:0:0.1"
                                                            BeginTime="0:0:0.15"></ColorAnimation>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grdContent"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.4"
                                                                        Value="1">
                                                </DiscreteDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="SkipLoadStoryboard">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="offset2"
                                                                           Storyboard.TargetProperty="Offset">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="1">
                                                </DiscreteDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="offset2"
                                                                          Storyboard.TargetProperty="Color">
                                                <DiscreteColorKeyFrame KeyTime="0:0:0"
                                                                       Value="White">
                                                </DiscreteColorKeyFrame>
                                            </ColorAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grdContent"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="1">
                                                </DiscreteDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="BeginCloseStoryboard">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="offset1"
                                                            Storyboard.TargetProperty="Color"
                                                            To="Transparent"
                                                            Duration="0:0:0.2"></ColorAnimation>
                                            <DoubleAnimation Storyboard.TargetName="offset1"
                                                             Storyboard.TargetProperty="Offset"
                                                             To="1"
                                                             Duration="0:0:0.1"
                                                             BeginTime="0:0:0.2"></DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <Trigger Property="AllowShowDelay"
                                         Value="False">
                                    <Setter TargetName="grdContent"
                                            Property="Opacity"
                                            Value="1" />
                                </Trigger>
                                <Trigger Property="IsCoverMaskShow"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.7"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="bdrCover"
                                                                                Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="True" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="bdrCover"
                                                                                Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="False" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsAwaitShow"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrAwaitCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.7"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="bdrAwaitCover"
                                                                                Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="True" />
                                                </BooleanAnimationUsingKeyFrames>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="loading"
                                                                                Storyboard.TargetProperty="IsRunning">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0.1"
                                                                             Value="True" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrAwaitCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="bdrAwaitCover"
                                                                                Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="False" />
                                                </BooleanAnimationUsingKeyFrames>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="loading"
                                                                                Storyboard.TargetProperty="IsRunning">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="False" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>

                                </Trigger>
                                <Trigger Property="ResizeMode"
                                         Value="CanMinimize">
                                    <Setter TargetName="btnMax"
                                            Property="IsEnabled"
                                            Value="False"></Setter>
                                </Trigger>
                                <Trigger Property="ResizeMode"
                                         Value="NoResize">
                                    <Setter TargetName="btnMin"
                                            Property="IsEnabled"
                                            Value="False"></Setter>
                                    <Setter TargetName="btnMax"
                                            Property="IsEnabled"
                                            Value="False"></Setter>
                                </Trigger>
                                <Trigger Property="ResizeMode"
                                         Value="CanResize">
                                    <Setter TargetName="grdResize"
                                            Property="Visibility"
                                            Value="Visible" />
                                </Trigger>
                                <Trigger Property="NavButtonVisibility"
                                         Value="Visible">
                                    <Setter TargetName="btnMin"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                    <Setter TargetName="btnMax"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                    <Setter TargetName="btnClose"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="AnimationStyle"
                     Value="Scale">
                <Setter Property="Opacity"
                        Value="0.5"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUWindow}">
                            <Grid>
                                <Border x:Name="bdrOuter"
                                        Margin="5"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Window}}"
                                        RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <ScaleTransform x:Name="scale"
                                                        ScaleX="0.95"
                                                        ScaleY="0.95" />
                                    </Border.RenderTransform>
                                    <Grid x:Name="grdContent"
                                          Opacity="0">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="{Binding NavbarHeight,RelativeSource={RelativeSource AncestorType=Window}}"></RowDefinition>
                                                <RowDefinition Height="*"></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <Grid x:Name="grdNavbar"
                                                  Background="{Binding NavbarBackground,RelativeSource={RelativeSource AncestorType=Window}}">
                                                <StackPanel Orientation="Horizontal"
                                                            HorizontalAlignment="Left"
                                                            Height="{Binding NavbarHeight,RelativeSource={RelativeSource AncestorType=Window}}">
                                                    <Label Content="{Binding Icon,RelativeSource={RelativeSource AncestorType=Window}}"
                                                           Margin="3,0,0,0"
                                                           VerticalContentAlignment="Center"
                                                           HorizontalContentAlignment="Left"
                                                           FontSize="{TemplateBinding FontSize}"
                                                           FontFamily="{DynamicResource IconFont}"
                                                           Foreground="{TemplateBinding Foreground}"></Label>
                                                    <Label VerticalContentAlignment="Center"
                                                           HorizontalContentAlignment="Left"
                                                           FontSize="{TemplateBinding FontSize}"
                                                           FontFamily="{DynamicResource IconFont}"
                                                           Foreground="{TemplateBinding Foreground}">
                                                        <Label.Content>
                                                            <MultiBinding Converter="{StaticResource HeaderConverter}">
                                                                <Binding Path="Header"
                                                                         RelativeSource="{RelativeSource AncestorType=Window}"></Binding>
                                                                <Binding Path="Title"
                                                                         RelativeSource="{RelativeSource AncestorType=Window}"></Binding>
                                                            </MultiBinding>
                                                        </Label.Content>
                                                    </Label>
                                                </StackPanel>
                                                <StackPanel Orientation="Horizontal"
                                                            HorizontalAlignment="Right"
                                                            VerticalAlignment="Top"
                                                            Height="{Binding NavButtonHeight,RelativeSource={RelativeSource AncestorType=Window}}">
                                                    <local:PUButton x:Name="btnMin"
                                                                    Visibility="Hidden"
                                                                    Content="-"
                                                                    Command="{Binding MinCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                    ButtonStyle="Hollow"
                                                                    BorderBrush="Transparent"
                                                                    CoverBrush="#99999999"
                                                                    Foreground="{TemplateBinding Foreground}"
                                                                    Width="{Binding NavButtonWidth,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    Height="{Binding NavButtonHeight,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    HorizontalAlignment="Right"
                                                                    FontSize="{TemplateBinding FontSize,Converter={StaticResource IconFontSizeConverter}}"></local:PUButton>
                                                    <local:PUButton x:Name="btnMax"
                                                                    Visibility="Hidden"
                                                                    Content="□"
                                                                    Command="{Binding MaxCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                    ButtonStyle="Hollow"
                                                                    BorderBrush="Transparent"
                                                                    CoverBrush="#99999999"
                                                                    Foreground="{TemplateBinding Foreground}"
                                                                    Width="{Binding NavButtonWidth,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    Height="{Binding NavButtonHeight,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    HorizontalAlignment="Right"
                                                                    FontSize="{TemplateBinding FontSize,Converter={StaticResource IconFontSizeConverter}}"></local:PUButton>
                                                    <local:PUButton x:Name="btnClose"
                                                                    Visibility="Hidden"
                                                                    Content="×"
                                                                    Command="{Binding CloseCommand,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                    ButtonStyle="Hollow"
                                                                    BorderBrush="Transparent"
                                                                    CoverBrush="#CCC53434"
                                                                    Foreground="{TemplateBinding Foreground}"
                                                                    Width="{Binding NavButtonWidth,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    Height="{Binding NavButtonHeight,RelativeSource={RelativeSource AncestorType=Window}}"
                                                                    HorizontalAlignment="Right"
                                                                    FontSize="{TemplateBinding FontSize,Converter={StaticResource IconFontSizeConverter}}" />
                                                </StackPanel>
                                            </Grid>
                                            <Grid Grid.Row="1"
                                                  x:Name="grdContainer">
                                                <AdornerDecorator>
                                                    <ContentPresenter Content="{TemplateBinding Content}" />
                                                </AdornerDecorator>
                                            </Grid>
                                        </Grid>
                                        <Border x:Name="bdrCover"
                                                Background="Black"
                                                BorderThickness="0"
                                                CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Window}}"
                                                Opacity="0"
                                                IsHitTestVisible="False" />
                                        <Border x:Name="bdrAwaitCover"
                                                Background="Black"
                                                BorderThickness="0"
                                                CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Window}}"
                                                Opacity="0"
                                                IsHitTestVisible="False" />
                                        <local:PULoading x:Name="loading"
                                                         Foreground="#CCFFFFFF"
                                                         Height="100"
                                                         Width="100"></local:PULoading>
                                    </Grid>
                                </Border>
                                <Grid x:Name="grdResize"
                                      Visibility="Collapsed">
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               VerticalAlignment="Top"
                                               Height="5"
                                               x:Name="Top"
                                               Margin="5,0,5,0" />
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               x:Name="Bottom"
                                               Height="5"
                                               VerticalAlignment="Bottom"
                                               Margin="5,0,5,0" />
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               HorizontalAlignment="Left"
                                               Margin="0,5,0,5"
                                               Width="5"
                                               x:Name="Left" />
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               Margin="0,5,0,5"
                                               Width="5"
                                               HorizontalAlignment="Right"
                                               x:Name="Right" />
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Bottom"
                                               Width="5"
                                               Height="5"
                                               x:Name="BottomLeft" />
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               VerticalAlignment="Bottom"
                                               Height="5"
                                               Width="5"
                                               HorizontalAlignment="Right"
                                               x:Name="BottomRight" />
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               HorizontalAlignment="Right"
                                               Width="5"
                                               Height="5"
                                               VerticalAlignment="Top"
                                               x:Name="TopRight" />
                                    <Rectangle Stroke="{x:Null}"
                                               Fill="#01FFFFFF"
                                               HorizontalAlignment="Left"
                                               Width="6"
                                               VerticalAlignment="Top"
                                               Height="5"
                                               x:Name="TopLeft" />
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="BeginLoadStoryboard">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="scale"
                                                             Storyboard.TargetProperty="ScaleX"
                                                             To="1"
                                                             Duration="0:0:0.3" />
                                            <DoubleAnimation Storyboard.TargetName="scale"
                                                             Storyboard.TargetProperty="ScaleY"
                                                             To="1"
                                                             Duration="0:0:0.3" />
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             To="1"
                                                             Duration="0:0:0.4" />
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grdContent"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0.4"
                                                                        Value="1">
                                                </DiscreteDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="SkipLoadStoryboard">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scale"
                                                                           Storyboard.TargetProperty="ScaleX">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="1">
                                                </DiscreteDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="scale"
                                                                           Storyboard.TargetProperty="ScaleY">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="1">
                                                </DiscreteDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="1">
                                                </DiscreteDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grdContent"
                                                                           Storyboard.TargetProperty="Opacity">
                                                <DiscreteDoubleKeyFrame KeyTime="0:0:0"
                                                                        Value="1">
                                                </DiscreteDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="BeginCloseStoryboard">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="scale"
                                                             Storyboard.TargetProperty="ScaleX"
                                                             To="0.95"
                                                             Duration="0:0:0.3" />
                                            <DoubleAnimation Storyboard.TargetName="scale"
                                                             Storyboard.TargetProperty="ScaleY"
                                                             To="0.95"
                                                             Duration="0:0:0.3" />
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             To="0"
                                                             Duration="0:0:0.3" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <Trigger Property="AllowShowDelay"
                                         Value="False">
                                    <Setter TargetName="grdContent"
                                            Property="Opacity"
                                            Value="1" />
                                </Trigger>
                                <Trigger Property="AllowShowDelay"
                                         Value="True">
                                    <Setter TargetName="grdContent"
                                            Property="Opacity"
                                            Value="0" />
                                </Trigger>
                                <Trigger Property="IsCoverMaskShow"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.7"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="bdrCover"
                                                                                Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="True" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="bdrCover"
                                                                                Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="False" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>

                                </Trigger>
                                <Trigger Property="IsAwaitShow"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrAwaitCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.7"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="bdrAwaitCover"
                                                                                Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="True" />
                                                </BooleanAnimationUsingKeyFrames>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="loading"
                                                                                Storyboard.TargetProperty="IsRunning">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0.1"
                                                                             Value="True" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrAwaitCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="bdrAwaitCover"
                                                                                Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="False" />
                                                </BooleanAnimationUsingKeyFrames>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="loading"
                                                                                Storyboard.TargetProperty="IsRunning">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0"
                                                                             Value="False" />
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>

                                </Trigger>
                                <Trigger Property="ResizeMode"
                                         Value="CanMinimize">
                                    <Setter TargetName="btnMax"
                                            Property="IsEnabled"
                                            Value="False"></Setter>
                                </Trigger>
                                <Trigger Property="ResizeMode"
                                         Value="NoResize">
                                    <Setter TargetName="btnMin"
                                            Property="IsEnabled"
                                            Value="False"></Setter>
                                    <Setter TargetName="btnMax"
                                            Property="IsEnabled"
                                            Value="False"></Setter>
                                </Trigger>
                                <Trigger Property="ResizeMode"
                                         Value="CanResize">
                                    <Setter TargetName="grdResize"
                                            Property="Visibility"
                                            Value="Visible" />
                                </Trigger>
                                <Trigger Property="NavButtonVisibility"
                                         Value="Visible">
                                    <Setter TargetName="btnMin"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                    <Setter TargetName="btnMax"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                    <Setter TargetName="btnClose"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="AllowAutoCoverMask"
                     Value="True">
                <Setter Property="AllowAutoOwner"
                        Value="True" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type local:PUDateTimeSelector}">
        <Setter Property="SnapsToDevicePixels"
                Value="False" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Foreground"
                Value="#3E3E3E"></Setter>
        <Setter Property="Background"
                Value="White"></Setter>
        <Setter Property="BorderBrush"
                Value="LightGray"></Setter>
        <Setter Property="BorderThickness"
                Value="1"></Setter>
        <Setter Property="Padding"
                Value="5,0,0,0"></Setter>
        <Setter Property="ShadowColor"
                Value="#888888" />
        <Setter Property="CornerRadius"
                Value="2" />
        <Setter Property="Icon"
                Value="&#xf073;" />
        <Setter Property="CoverBrush"
                Value="#3E3E3E" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PUDateTimeSelector}">
                    <Grid>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                        </Border>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Label x:Name="LblIcon"
                                   Padding="10,0,2,0"
                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Content="{Binding Icon,RelativeSource={RelativeSource AncestorType=local:PUDateTimeSelector}}"
                                   Foreground="{TemplateBinding Foreground}"
                                   FontFamily="{DynamicResource IconFont}"></Label>
                            <ContentPresenter x:Name="ContentSite"
                                              Grid.Column="1"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              ContentSource="Text"
                                              IsHitTestVisible="False" />
                        </Grid>
                        <ToggleButton x:Name="ToggleButton"
                                      Focusable="false"
                                      IsChecked="{Binding Path=IsOpen, Mode=TwoWay, ElementName=Popup}"
                                      ClickMode="Press"
                                      Foreground="{TemplateBinding Foreground}"
                                      Background="Transparent"
                                      BorderBrush="Transparent"
                                      BorderThickness="0">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid Background="Transparent">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="30" />
                                                    </Grid.ColumnDefinitions>
                                                    <Path x:Name="arrow1"
                                                          Opacity="1"
                                                          VerticalAlignment="Center"
                                                          Grid.Column="1"
                                                          HorizontalAlignment="Center"
                                                          Data="M5,4 H14 L9.5,10 Z"
                                                          Width="15"
                                                          Height="15"
                                                          Fill="{TemplateBinding Foreground}"
                                                          RenderTransformOrigin="0.5,0.5" />
                                                    <Path x:Name="arrow2"
                                                          Opacity="0"
                                                          VerticalAlignment="Center"
                                                          Grid.Column="1"
                                                          HorizontalAlignment="Center"
                                                          Data="M5,10 H14 L9.5,4.5 Z"
                                                          Width="15"
                                                          Height="15"
                                                          Fill="{TemplateBinding Foreground}"
                                                          RenderTransformOrigin="0.5,0.5" />
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked"
                                                             Value="True">
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="arrow1"
                                                                                     Storyboard.TargetProperty="Opacity"
                                                                                     To="0"
                                                                                     Duration="0:0:0.2"></DoubleAnimation>
                                                                    <DoubleAnimation Storyboard.TargetName="arrow2"
                                                                                     Storyboard.TargetProperty="Opacity"
                                                                                     To="1"
                                                                                     Duration="0:0:0.2"></DoubleAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="arrow1"
                                                                                     Storyboard.TargetProperty="Opacity"
                                                                                     To="1"
                                                                                     Duration="0:0:0.2"></DoubleAnimation>
                                                                    <DoubleAnimation Storyboard.TargetName="arrow2"
                                                                                     Storyboard.TargetProperty="Opacity"
                                                                                     To="0"
                                                                                     Duration="0:0:0.2"></DoubleAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.ExitActions>
                                                    </Trigger>

                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <local:NotTopMostPopup Placement="Bottom"
                                               x:Name="Popup"
                                               Focusable="False"
                                               Tag="{Binding ElementName=ToggleButton}"
                                               AllowsTransparency="True"
                                               PopupAnimation="Slide">
                            <Grid x:Name="DropDown">
                                <Border x:Name="DropDownBorder"
                                        Margin="0,0,0,10"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding CornerRadius,RelativeSource={RelativeSource AncestorType=local:PUDateTimeSelector}}">
                                    <Border.Effect>
                                        <DropShadowEffect ShadowDepth="0"
                                                          BlurRadius="10"
                                                          Opacity="1"
                                                          Color="{Binding ShadowColor,RelativeSource={RelativeSource AncestorType=local:PUDateTimeSelector}}"></DropShadowEffect>
                                    </Border.Effect>
                                </Border>
                                <Grid Margin="1,1,1,10">
                                    <local:PUDatePicker CoverBrush="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=local:PUDateTimeSelector},Mode=OneWay}"
                                                        MaxDateTime="{Binding MaxDate,RelativeSource={RelativeSource AncestorType=local:PUDateTimeSelector},Mode=OneWay}"
                                                        MinDateTime="{Binding MaxDate,RelativeSource={RelativeSource AncestorType=local:PUDateTimeSelector},Mode=OneWay}"
                                                        SelectedDateTime="{Binding SelectedDateTime,RelativeSource={RelativeSource AncestorType=local:PUDateTimeSelector},Mode=TwoWay}"
                                                        DatePickerMode="{Binding DatePickerMode,RelativeSource={RelativeSource AncestorType=local:PUDateTimeSelector},Mode=TwoWay}"
                                                        Width="300"
                                                        Height="300" />
                                </Grid>
                            </Grid>
                        </local:NotTopMostPopup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Opacity"
                                    Value="1"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter Property="Opacity"
                                    Value="0.9"></Setter>
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter Property="Opacity"
                                    Value="1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="DatePickerMode"
                     Value="TimeOnly">
                <Setter Property="Icon"
                        Value="&#xf017;" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:PUButton}">
        <Setter Property="Background"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="BorderThickness"
                Value="0"></Setter>
        <Setter Property="Foreground"
                Value="White"></Setter>
        <Setter Property="Content"
                Value="Button"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Style.Triggers>
            <Trigger Property="ButtonStyle"
                     Value="General">
                <Setter Property="CoverBrush"
                        Value="#26FFFFFF" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUButton}">
                            <Grid x:Name="grdMain">
                                <Border x:Name="bdrOuter"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                    <Border x:Name="bdrInner"
                                            Background="{TemplateBinding Background}"
                                            BorderThickness="0"
                                            ClipToBounds="True"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}" />
                                </Border>
                                <Border x:Name="bdrHoverCover"
                                        Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=Button}}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}"
                                        Opacity="0"></Border>
                                <Border x:Name="bdrPressedCover"
                                        Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=Button}}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}"
                                        Opacity="0"></Border>
                                <ContentPresenter x:Name="content"
                                                  Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="bdrPressedCover"
                                            Property="Opacity"
                                            Value="1"></Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed"
                                                   Value="True"></Condition>
                                        <Condition Property="ClickStyle"
                                                   Value="Sink"></Condition>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="grdMain"
                                                Property="Margin"
                                                Value="0,1.5,0,-1"></Setter>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrHoverCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrHoverCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ButtonStyle"
                     Value="Hollow">
                <Setter Property="Foreground"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="BorderBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="BorderThickness"
                        Value="1"></Setter>
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUButton}">
                            <Grid x:Name="grdMain">
                                <Border x:Name="bdrOuter"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                    <Grid>
                                        <Border x:Name="bdrHoverCover"
                                                Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=Button}}"
                                                CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}"
                                                Opacity="0"
                                                Margin="-1"></Border>
                                        <Border x:Name="bdrInner"
                                                BorderThickness="0"
                                                ClipToBounds="True"
                                                CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                            <ContentPresenter x:Name="content"
                                                              Margin="{TemplateBinding Padding}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              ContentSource="Content"></ContentPresenter>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Border x:Name="bdrPressedCover"
                                        Background="White"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}"
                                        Opacity="0"></Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="bdrPressedCover"
                                            Property="Opacity"
                                            Value="0.1"></Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed"
                                                   Value="True"></Condition>
                                        <Condition Property="ClickStyle"
                                                   Value="Sink"></Condition>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="grdMain"
                                                Property="Margin"
                                                Value="0,1.5,0,-1"></Setter>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrHoverCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                To="White"
                                                                Duration="0:0:0.3"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrHoverCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.3"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ButtonStyle"
                     Value="Outline">
                <Setter Property="Foreground"
                        Value="LightGray"></Setter>
                <Setter Property="BorderBrush"
                        Value="LightGray"></Setter>
                <Setter Property="BorderThickness"
                        Value="1"></Setter>
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUButton}">
                            <Grid x:Name="grdMain">
                                <Border x:Name="bdrOuter"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                    <Grid>
                                        <Border x:Name="bdrInner"
                                                BorderThickness="0"
                                                ClipToBounds="True"
                                                CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                            <ContentPresenter x:Name="content"
                                                              Margin="{TemplateBinding Padding}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              ContentSource="Content"></ContentPresenter>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Border x:Name="bdrHoverCover"
                                        Background="Transparent"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=Button}}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}"
                                        Opacity="1">
                                    <Border.OpacityMask>
                                        <RadialGradientBrush GradientOrigin="0.5,0.5"
                                                             RadiusX="1"
                                                             RadiusY="1">
                                            <GradientStopCollection>
                                                <GradientStop Offset="0"
                                                              Color="White"></GradientStop>
                                                <GradientStop x:Name="offset"
                                                              Offset="0"
                                                              Color="Transparent"></GradientStop>
                                            </GradientStopCollection>
                                        </RadialGradientBrush>
                                    </Border.OpacityMask>
                                    <Label Margin="{TemplateBinding Padding}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           Content="{TemplateBinding Content}"
                                           Foreground="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=Button}}"></Label>

                                </Border>
                                <Border x:Name="bdrPressedCover"
                                        Background="{TemplateBinding CoverBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}"
                                        Opacity="0"></Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="bdrPressedCover"
                                            Property="Opacity"
                                            Value="0.1"></Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed"
                                                   Value="True"></Condition>
                                        <Condition Property="ClickStyle"
                                                   Value="Sink"></Condition>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="grdMain"
                                                Property="Margin"
                                                Value="0,2,0,-1.5"></Setter>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="1"
                                                                 Duration="0:0:0.15"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="White"
                                                                Duration="0:0:0.05"
                                                                BeginTime="0:0:0.15"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="Transparent"
                                                                Duration="0:0:0.05"></ColorAnimation>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="0"
                                                                 Duration="0:0:0.15"
                                                                 BeginTime="0:0:0.05"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="ButtonStyle"
                     Value="Link">
                <Setter Property="Foreground"
                        Value="LightGray"></Setter>
                <Setter Property="BorderBrush"
                        Value="LightGray"></Setter>
                <Setter Property="BorderThickness"
                        Value="1"></Setter>
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUButton}">
                            <Grid x:Name="grdMain"
                                  Background="Transparent">
                                <Label x:Name="lblContent"
                                       Foreground="{TemplateBinding Foreground}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Content="{TemplateBinding Content}"></Label>
                                <Label x:Name="lblCover"
                                       Opacity="0"
                                       Foreground="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=Button}}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Content="{TemplateBinding Content}"></Label>
                                <Label x:Name="lblPressedCover"
                                       Opacity="0"
                                       Foreground="White"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Content="{TemplateBinding Content}"></Label>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed"
                                                   Value="True"></Condition>
                                        <Condition Property="ClickStyle"
                                                   Value="Sink"></Condition>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="grdMain"
                                                Property="Margin"
                                                Value="0,1.5,0,-1"></Setter>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="lblPressedCover"
                                            Property="Opacity"
                                            Value="0.2"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="lblContent"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.15"></DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="lblCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.15"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="lblContent"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.15"></DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="lblCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.15"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:PURepeatButton}">
        <Setter Property="Background"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="BorderThickness"
                Value="0"></Setter>
        <Setter Property="Foreground"
                Value="White"></Setter>
        <Setter Property="Content"
                Value="RepeatButton"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Style.Triggers>
            <Trigger Property="RepeatButtonStyle"
                     Value="General">
                <Setter Property="CoverBrush"
                        Value="#26FFFFFF" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PURepeatButton}">
                            <Grid x:Name="grdMain">
                                <Border x:Name="bdrOuter"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}">
                                    <Border x:Name="bdrInner"
                                            Background="{TemplateBinding Background}"
                                            BorderThickness="0"
                                            ClipToBounds="True"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}" />
                                </Border>
                                <Border x:Name="bdrHoverCover"
                                        Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                        Opacity="0"></Border>
                                <Border x:Name="bdrPressedCover"
                                        Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                        Opacity="0"></Border>
                                <ContentPresenter x:Name="content"
                                                  Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="bdrPressedCover"
                                            Property="Opacity"
                                            Value="1"></Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed"
                                                   Value="True"></Condition>
                                        <Condition Property="ClickStyle"
                                                   Value="Sink"></Condition>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="grdMain"
                                                Property="Margin"
                                                Value="0,1.5,0,-1"></Setter>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrHoverCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrHoverCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="RepeatButtonStyle"
                     Value="Hollow">
                <Setter Property="Foreground"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="BorderBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="BorderThickness"
                        Value="1"></Setter>
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PURepeatButton}">
                            <Grid x:Name="grdMain">
                                <Border x:Name="bdrOuter"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}">
                                    <Grid>
                                        <Border x:Name="bdrHoverCover"
                                                Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                                CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                                Opacity="0"
                                                Margin="-1"></Border>
                                        <Border x:Name="bdrInner"
                                                BorderThickness="0"
                                                ClipToBounds="True"
                                                CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}">
                                            <ContentPresenter x:Name="content"
                                                              Margin="{TemplateBinding Padding}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              ContentSource="Content"></ContentPresenter>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Border x:Name="bdrPressedCover"
                                        Background="White"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                        Opacity="0"></Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="bdrPressedCover"
                                            Property="Opacity"
                                            Value="0.1"></Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed"
                                                   Value="True"></Condition>
                                        <Condition Property="ClickStyle"
                                                   Value="Sink"></Condition>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="grdMain"
                                                Property="Margin"
                                                Value="0,1.5,0,-1"></Setter>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrHoverCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                To="White"
                                                                Duration="0:0:0.3"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrHoverCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetProperty="(Foreground).(SolidColorBrush.Color)"
                                                                Duration="0:0:0.3"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="RepeatButtonStyle"
                     Value="Outline">
                <Setter Property="Foreground"
                        Value="LightGray"></Setter>
                <Setter Property="BorderBrush"
                        Value="LightGray"></Setter>
                <Setter Property="BorderThickness"
                        Value="1"></Setter>
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PURepeatButton}">
                            <Grid x:Name="grdMain">
                                <Border x:Name="bdrOuter"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}">
                                    <Grid>
                                        <Border x:Name="bdrInner"
                                                BorderThickness="0"
                                                ClipToBounds="True"
                                                CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}">
                                            <ContentPresenter x:Name="content"
                                                              Margin="{TemplateBinding Padding}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              ContentSource="Content"></ContentPresenter>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Border x:Name="bdrHoverCover"
                                        Background="Transparent"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                        Opacity="1">
                                    <Border.OpacityMask>
                                        <RadialGradientBrush GradientOrigin="0.5,0.5"
                                                             RadiusX="1"
                                                             RadiusY="1">
                                            <GradientStopCollection>
                                                <GradientStop Offset="0"
                                                              Color="White"></GradientStop>
                                                <GradientStop x:Name="offset"
                                                              Offset="0"
                                                              Color="Transparent"></GradientStop>
                                            </GradientStopCollection>
                                        </RadialGradientBrush>
                                    </Border.OpacityMask>
                                    <Label Margin="{TemplateBinding Padding}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           Content="{TemplateBinding Content}"
                                           Foreground="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RepeatButton}}"></Label>

                                </Border>
                                <Border x:Name="bdrPressedCover"
                                        Background="{TemplateBinding CoverBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                        Opacity="0"></Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="bdrPressedCover"
                                            Property="Opacity"
                                            Value="0.1"></Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed"
                                                   Value="True"></Condition>
                                        <Condition Property="ClickStyle"
                                                   Value="Sink"></Condition>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="grdMain"
                                                Property="Margin"
                                                Value="0,2,0,-1.5"></Setter>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="1"
                                                                 Duration="0:0:0.15"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="White"
                                                                Duration="0:0:0.05"
                                                                BeginTime="0:0:0.15"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="Transparent"
                                                                Duration="0:0:0.05"></ColorAnimation>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="0"
                                                                 Duration="0:0:0.15"
                                                                 BeginTime="0:0:0.05"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="RepeatButtonStyle"
                     Value="Link">
                <Setter Property="Foreground"
                        Value="LightGray"></Setter>
                <Setter Property="BorderBrush"
                        Value="LightGray"></Setter>
                <Setter Property="BorderThickness"
                        Value="1"></Setter>
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PURepeatButton}">
                            <Grid x:Name="grdMain">
                                <Label x:Name="lblContent"
                                       Foreground="{TemplateBinding Foreground}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Content="{TemplateBinding Content}"></Label>
                                <Label x:Name="lblCover"
                                       Opacity="0"
                                       Foreground="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RepeatButton}}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Content="{TemplateBinding Content}"></Label>
                                <Label x:Name="lblPressedCover"
                                       Opacity="0"
                                       Foreground="White"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Content="{TemplateBinding Content}"></Label>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsPressed"
                                                   Value="True"></Condition>
                                        <Condition Property="ClickStyle"
                                                   Value="Sink"></Condition>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="grdMain"
                                                Property="Margin"
                                                Value="0,1.5,0,-1"></Setter>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="lblPressedCover"
                                            Property="Opacity"
                                            Value="0.2"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="lblContent"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.15"></DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="lblCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.15"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="lblContent"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.15"></DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="lblCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.15"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:PUTextBox}">
        <Setter Property="BorderBrush"
                Value="LightGray"></Setter>
        <Setter Property="BorderThickness"
                Value="1"></Setter>
        <Setter Property="Foreground"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="Background"
                Value="White"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"></Setter>
        <Setter Property="Padding"
                Value="5,0,0,0"></Setter>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Setter Property="ShadowColor"
                Value="#888888" />
        <Setter Property="Height"
                Value="30" />
        <Style.Triggers>
            <Trigger Property="TextBoxStyle"
                     Value="General">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUTextBox}">
                            <Grid>
                                <Border x:Name="bdrOuter"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=TextBox}}">
                                    <Border.Effect>
                                        <DropShadowEffect x:Name="effect"
                                                          ShadowDepth="0"
                                                          BlurRadius="5"
                                                          Color="{Binding ShadowColor,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                                          Opacity="0" />
                                    </Border.Effect>
                                </Border>
                                <Border x:Name="bdrInner"
                                        ClipToBounds="True"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                    <Grid>
                                        <ScrollViewer x:Name="PART_ContentHost"
                                                      Style="{StaticResource MiniScrollViewer}"
                                                      Margin="{TemplateBinding Padding}"
                                                      IsTabStop="False"
                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
                                            <ScrollViewer.Height>
                                                <MultiBinding Converter="{StaticResource TextBoxInnerHeightConverter}">
                                                    <Binding Path="ActualHeight"
                                                             RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                    <Binding Path="Padding"
                                                             RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                    <Binding Path="VerticalContentAlignment"
                                                             RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                </MultiBinding>
                                            </ScrollViewer.Height>
                                        </ScrollViewer>
                                        <TextBlock  x:Name="tbWatermark"
                                                    Padding="2,0,0,0"
                                                    Margin="{TemplateBinding Padding}"
                                                    TextWrapping="Wrap"
                                                    Focusable="False"
                                                    IsHitTestVisible="False"
                                                    Visibility="Collapsed"
                                                    Text="{Binding Watermark,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    Opacity="0.6" />
                                        <local:PUButton x:Name="btnClear"
                                                        ButtonStyle="Link"
                                                        Visibility="Collapsed"
                                                        Opacity="0"
                                                        Content="×"
                                                        Tag="Clear"
                                                        Margin="0,0,3,0"
                                                        Foreground="{TemplateBinding Foreground}"
                                                        CoverBrush="{TemplateBinding Foreground}"
                                                        FontSize="16"
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Right" />
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsClearButtonShow"
                                         Value="True">
                                    <Setter TargetName="btnClear"
                                            Property="Visibility"
                                            Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsFocused"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0.4"
                                                                 Duration="0:0:0.2"
                                                                 Storyboard.TargetName="effect"
                                                                 Storyboard.TargetProperty="Opacity" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0"
                                                                 Duration="0:0:0.2"
                                                                 Storyboard.TargetName="effect"
                                                                 Storyboard.TargetProperty="Opacity" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="Text"
                                         Value="">
                                    <Setter Property="Visibility"
                                            TargetName="tbWatermark"
                                            Value="Visible" />
                                </Trigger>
                                <Trigger  Property="IsEnabled"
                                          Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="btnClear"
                                            Property="Opacity"
                                            Value="1" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TextBoxStyle"
                     Value="IconGroup">
                <Setter Property="Padding"
                        Value="0,0,0,0"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUTextBox}">
                            <Grid>
                                <Border x:Name="bdrOuter"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=TextBox}}">
                                    <Border.Effect>
                                        <DropShadowEffect x:Name="effect"
                                                          ShadowDepth="0"
                                                          BlurRadius="5"
                                                          Color="{Binding ShadowColor,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                                          Opacity="0" />
                                    </Border.Effect>
                                </Border>
                                <Border x:Name="bdrInner"
                                        ClipToBounds="True"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Label Width="{Binding IconWidth,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                               HorizontalContentAlignment="Center"
                                               VerticalContentAlignment="Center"
                                               Content="{Binding Icon,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                               Foreground="{TemplateBinding Foreground}"
                                               FontFamily="{DynamicResource IconFont}"></Label>
                                        <Grid Grid.Column="1">
                                            <ScrollViewer x:Name="PART_ContentHost"
                                                          Style="{StaticResource MiniScrollViewer}"
                                                          Margin="{TemplateBinding Padding}"
                                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          Foreground="{TemplateBinding Foreground}"
                                                          ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                          ScrollViewer.VerticalScrollBarVisibility="Auto">
                                                <ScrollViewer.Height>
                                                    <MultiBinding Converter="{StaticResource TextBoxInnerHeightConverter}">
                                                        <Binding Path="ActualHeight"
                                                                 RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                        <Binding Path="Padding"
                                                                 RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                        <Binding Path="VerticalContentAlignment"
                                                                 RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                    </MultiBinding>
                                                </ScrollViewer.Height>
                                            </ScrollViewer>
                                            <TextBlock  x:Name="tbWatermark"
                                                        Padding="2,0,0,0"
                                                        Margin="{TemplateBinding Padding}"
                                                        TextWrapping="Wrap"
                                                        Focusable="False"
                                                        IsHitTestVisible="False"
                                                        Visibility="Collapsed"
                                                        Text="{Binding Watermark,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        Opacity="0.6" />
                                            <local:PUButton x:Name="btnClear"
                                                            ButtonStyle="Link"
                                                            Visibility="Collapsed"
                                                            Opacity="0"
                                                            Content="×"
                                                            Tag="Clear"
                                                            Margin="0,0,3,0"
                                                            Foreground="{TemplateBinding Foreground}"
                                                            CoverBrush="{TemplateBinding Foreground}"
                                                            FontSize="16"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Right" />
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsClearButtonShow"
                                         Value="True">
                                    <Setter TargetName="btnClear"
                                            Property="Visibility"
                                            Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsFocused"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0.4"
                                                                 Duration="0:0:0.2"
                                                                 Storyboard.TargetName="effect"
                                                                 Storyboard.TargetProperty="Opacity" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0"
                                                                 Duration="0:0:0.2"
                                                                 Storyboard.TargetName="effect"
                                                                 Storyboard.TargetProperty="Opacity" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="Text"
                                         Value="">
                                    <Setter Property="Visibility"
                                            TargetName="tbWatermark"
                                            Value="Visible" />
                                </Trigger>
                                <Trigger  Property="IsEnabled"
                                          Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="btnClear"
                                            Property="Opacity"
                                            Value="1" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type local:PUPasswordBox}">
        <Setter Property="AcceptsReturn"
                Value="False"></Setter>
        <Setter Property="BorderBrush"
                Value="LightGray"></Setter>
        <Setter Property="BorderThickness"
                Value="1"></Setter>
        <Setter Property="Foreground"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="Background"
                Value="White"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"></Setter>
        <Setter Property="Padding"
                Value="5,0,0,0"></Setter>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Setter Property="InputMethod.IsInputMethodEnabled"
                Value="False"></Setter>
        <Setter Property="ShadowColor"
                Value="#888888" />
        <Style.Triggers>
            <Trigger Property="PasswordBoxStyle"
                     Value="General">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUPasswordBox}">
                            <Grid>
                                <Border x:Name="bdrOuter"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=TextBox}}">
                                    <Border.Effect>
                                        <DropShadowEffect x:Name="effect"
                                                          ShadowDepth="0"
                                                          BlurRadius="5"
                                                          Color="{Binding ShadowColor,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                                          Opacity="0" />
                                    </Border.Effect>
                                </Border>
                                <Border x:Name="bdrInner"
                                        ClipToBounds="True"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                    <Grid>
                                        <ScrollViewer x:Name="PART_ContentHost"
                                                      Style="{StaticResource MiniScrollViewer}"
                                                      Margin="{TemplateBinding Padding}"
                                                      IsTabStop="False"
                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
                                            <ScrollViewer.Height>
                                                <MultiBinding Converter="{StaticResource TextBoxInnerHeightConverter}">
                                                    <Binding Path="ActualHeight"
                                                             RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                    <Binding Path="Padding"
                                                             RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                    <Binding Path="VerticalContentAlignment"
                                                             RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                </MultiBinding>
                                            </ScrollViewer.Height>
                                        </ScrollViewer>
                                        <TextBlock  x:Name="tbWatermark"
                                                    Padding="2,0,0,0"
                                                    Margin="{TemplateBinding Padding}"
                                                    TextWrapping="Wrap"
                                                    Focusable="False"
                                                    IsHitTestVisible="False"
                                                    Visibility="Collapsed"
                                                    Text="{Binding Watermark,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    Opacity="0.6" />
                                        <local:PUButton x:Name="btnShowPwd"
                                                        ButtonStyle="Link"
                                                        Opacity="0"
                                                        Visibility="Collapsed"
                                                        FontFamily="{DynamicResource IconFont}"
                                                        Content=""
                                                        Tag="ShowPwd"
                                                        Margin="0,0,3,0"
                                                        Foreground="{TemplateBinding Foreground}"
                                                        CoverBrush="{TemplateBinding Foreground}"
                                                        FontSize="16"
                                                        VerticalAlignment="Center"
                                                        HorizontalAlignment="Right" />
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsShowPwdButtonShow"
                                         Value="True">
                                    <Setter TargetName="btnShowPwd"
                                            Property="Visibility"
                                            Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsFocused"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0.4"
                                                                 Duration="0:0:0.2"
                                                                 Storyboard.TargetName="effect"
                                                                 Storyboard.TargetProperty="Opacity" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0"
                                                                 Duration="0:0:0.2"
                                                                 Storyboard.TargetName="effect"
                                                                 Storyboard.TargetProperty="Opacity" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="Text"
                                         Value="">
                                    <Setter Property="Visibility"
                                            TargetName="tbWatermark"
                                            Value="Visible" />
                                </Trigger>
                                <Trigger  Property="IsEnabled"
                                          Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="btnShowPwd"
                                            Property="Opacity"
                                            Value="1" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="PasswordBoxStyle"
                     Value="IconGroup">
                <Setter Property="Padding"
                        Value="0,0,0,0"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUPasswordBox}">
                            <Grid>
                                <Border x:Name="bdrOuter"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=TextBox}}">
                                    <Border.Effect>
                                        <DropShadowEffect x:Name="effect"
                                                          ShadowDepth="0"
                                                          BlurRadius="5"
                                                          Color="{Binding ShadowColor,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                                          Opacity="0" />
                                    </Border.Effect>
                                </Border>
                                <Border x:Name="bdrInner"
                                        ClipToBounds="True"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Button}}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Label Width="{Binding IconWidth,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Left"
                                               VerticalContentAlignment="Center"
                                               HorizontalContentAlignment="Center"
                                               Content="{Binding Icon,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                               Foreground="{TemplateBinding Foreground}"
                                               FontFamily="{DynamicResource IconFont}"></Label>
                                        <Grid Grid.Column="1">
                                            <ScrollViewer x:Name="PART_ContentHost"
                                                          Style="{StaticResource MiniScrollViewer}"
                                                          Margin="{TemplateBinding Padding}"
                                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          Foreground="{TemplateBinding Foreground}"
                                                          ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                                          ScrollViewer.VerticalScrollBarVisibility="Auto">
                                                <ScrollViewer.Height>
                                                    <MultiBinding Converter="{StaticResource TextBoxInnerHeightConverter}">
                                                        <Binding Path="ActualHeight"
                                                                 RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                        <Binding Path="Padding"
                                                                 RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                        <Binding Path="VerticalContentAlignment"
                                                                 RelativeSource="{RelativeSource AncestorType=TextBox}"></Binding>
                                                    </MultiBinding>
                                                </ScrollViewer.Height>
                                            </ScrollViewer>
                                            <TextBlock  x:Name="tbWatermark"
                                                        Padding="2,0,0,0"
                                                        Margin="{TemplateBinding Padding}"
                                                        TextWrapping="Wrap"
                                                        Focusable="False"
                                                        IsHitTestVisible="False"
                                                        Visibility="Collapsed"
                                                        Text="{Binding Watermark,RelativeSource={RelativeSource AncestorType=TextBox}}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        Opacity="0.6" />
                                            <local:PUButton x:Name="btnShowPwd"
                                                            ButtonStyle="Link"
                                                            Opacity="0"
                                                            Visibility="Collapsed"
                                                            FontFamily="{DynamicResource IconFont}"
                                                            Content=""
                                                            Tag="ShowPwd"
                                                            Margin="0,0,3,0"
                                                            Foreground="{TemplateBinding Foreground}"
                                                            CoverBrush="{TemplateBinding Foreground}"
                                                            FontSize="16"
                                                            VerticalAlignment="Center"
                                                            HorizontalAlignment="Right" />
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsShowPwdButtonShow"
                                         Value="True">
                                    <Setter TargetName="btnShowPwd"
                                            Property="Visibility"
                                            Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsFocused"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0.4"
                                                                 Duration="0:0:0.2"
                                                                 Storyboard.TargetName="effect"
                                                                 Storyboard.TargetProperty="Opacity" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0"
                                                                 Duration="0:0:0.2"
                                                                 Storyboard.TargetName="effect"
                                                                 Storyboard.TargetProperty="Opacity" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="Text"
                                         Value="">
                                    <Setter Property="Visibility"
                                            TargetName="tbWatermark"
                                            Value="Visible" />
                                </Trigger>
                                <Trigger  Property="IsEnabled"
                                          Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="btnShowPwd"
                                            Property="Opacity"
                                            Value="1" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:PUComboBox}">
        <Setter Property="Foreground"
                Value="DimGray"></Setter>
        <Setter Property="Background"
                Value="White"></Setter>
        <Setter Property="BorderBrush"
                Value="LightGray"></Setter>
        <Setter Property="BorderThickness"
                Value="1"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"></Setter>
        <Setter Property="Padding"
                Value="5,0,0,0"></Setter>
        <Setter Property="UseLayoutRounding"
                Value="True"></Setter>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="Opacity"
                Value="0.8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PUComboBox}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="EditStates">
                                <VisualState x:Name="Editable">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="PART_EditableTextBox">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="ContentSite">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Hidden}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Uneditable" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="bdrMain"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=ComboBox}}">
                        </Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          x:Name="ContentSite"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          IsHitTestVisible="False"
                                          Opacity="0.8" />
                        <ToggleButton x:Name="ToggleButton"
                                      Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"
                                      Foreground="{TemplateBinding Foreground}"
                                      Background="Transparent"
                                      BorderBrush="Transparent"
                                      BorderThickness="0">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid Background="Transparent">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="30" />
                                                    </Grid.ColumnDefinitions>
                                                    <Path x:Name="arrow1"
                                                          Opacity="1"
                                                          VerticalAlignment="Center"
                                                          Grid.Column="1"
                                                          HorizontalAlignment="Center"
                                                          Data="M5,4 H14 L9.5,10 Z"
                                                          Width="15"
                                                          Height="15"
                                                          Fill="{TemplateBinding Foreground}"
                                                          RenderTransformOrigin="0.5,0.5" />
                                                    <Path x:Name="arrow2"
                                                          Opacity="0"
                                                          VerticalAlignment="Center"
                                                          Grid.Column="1"
                                                          HorizontalAlignment="Center"
                                                          Data="M5,10 H14 L9.5,4.5 Z"
                                                          Width="15"
                                                          Height="15"
                                                          Fill="{TemplateBinding Foreground}"
                                                          RenderTransformOrigin="0.5,0.5" />
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked"
                                                             Value="True">
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="arrow1"
                                                                                     Storyboard.TargetProperty="Opacity"
                                                                                     To="0"
                                                                                     Duration="0:0:0.2"></DoubleAnimation>
                                                                    <DoubleAnimation Storyboard.TargetName="arrow2"
                                                                                     Storyboard.TargetProperty="Opacity"
                                                                                     To="1"
                                                                                     Duration="0:0:0.2"></DoubleAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="arrow1"
                                                                                     Storyboard.TargetProperty="Opacity"
                                                                                     To="1"
                                                                                     Duration="0:0:0.2"></DoubleAnimation>
                                                                    <DoubleAnimation Storyboard.TargetName="arrow2"
                                                                                     Storyboard.TargetProperty="Opacity"
                                                                                     To="0"
                                                                                     Duration="0:0:0.2"></DoubleAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.ExitActions>
                                                    </Trigger>

                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <local:PUTextBox BorderThickness="0"
                                         Margin="0,0,25,0"
                                         Padding="{TemplateBinding Padding}"
                                         x:Name="PART_EditableTextBox"
                                         VerticalAlignment="Center"
                                         Focusable="True"
                                         Visibility="Hidden"
                                         Background="Transparent"
                                         BorderBrush="Transparent"
                                         ShadowColor="Transparent"
                                         Foreground="{TemplateBinding Foreground}"
                                         IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup IsOpen="{TemplateBinding IsDropDownOpen}"
                               Placement="Bottom"
                               x:Name="Popup"
                               Focusable="False"
                               AllowsTransparency="True"
                               PopupAnimation="Slide">
                            <Grid MaxHeight="180"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  x:Name="DropDown">
                                <Border x:Name="DropDownBorder"
                                        Margin="0,0,0,10"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=ComboBox}}">
                                    <Border.Effect>
                                        <DropShadowEffect ShadowDepth="0"
                                                          BlurRadius="10"
                                                          Opacity="1"
                                                          Color="{Binding ShadowColor,RelativeSource={RelativeSource AncestorType=ComboBox}}"></DropShadowEffect>
                                    </Border.Effect>
                                </Border>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <local:PUTextBox x:Name="tbSearch"
                                                     Height="30"
                                                     Padding="5,0,0,0"
                                                     Tag="Search"
                                                     Visibility="{Binding SearchBoxVisibility,RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                                     IsClearButtonShow="True"
                                                     BorderBrush="Transparent"
                                                     BorderThickness="0"
                                                     ShadowColor="Transparent"
                                                     Foreground="{TemplateBinding Foreground}"
                                                     Watermark="  搜 索"
                                                     FontFamily="{DynamicResource IconFont}"
                                                     Margin="1,5,1,0" />
                                    <ScrollViewer Grid.Row="1"
                                                  VerticalScrollBarVisibility="Auto"
                                                  HorizontalScrollBarVisibility="Auto"
                                                  Style="{DynamicResource MiniScrollViewer}"
                                                  Margin="1,5,1,15"
                                                  MaxHeight="250">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                    <local:PUButton x:Name="btnClear"
                                                    Grid.Row="1"
                                                    ButtonStyle="Link"
                                                    Visibility="Collapsed"
                                                    Content="×"
                                                    Tag="Clear"
                                                    Margin="0,0,3,0"
                                                    Foreground="{TemplateBinding Foreground}"
                                                    CoverBrush="{TemplateBinding Foreground}"
                                                    FontSize="16"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Right" />
                                </Grid>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Opacity"
                                    Value="1"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter Property="Opacity"
                                    Value="0.9"></Setter>
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter Property="Opacity"
                                    Value="1"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:PUComboBoxItem}">
        <Setter Property="Background"
                Value="White"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"></Setter>
        <Setter Property="Padding"
                Value="5,0,0,0"></Setter>
        <Setter Property="UseLayoutRounding"
                Value="True"></Setter>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Setter Property="FontSize"
                Value="14">
        </Setter>
        <Setter Property="MinHeight"
                Value="35"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PUComboBoxItem}">
                    <Grid Height="{TemplateBinding Height}"
                          Width="{TemplateBinding Width}">
                        <Border x:Name="bdrMain"
                                Background="Transparent" />
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          x:Name="txtContent"
                                          Opacity="0.8"
                                          ContentSource="Content" />
                        <local:PUButton x:Name="btnDelete"
                                        ButtonStyle="Link"
                                        Opacity="0.7"
                                        Command="{Binding DeleteCommand,RelativeSource={RelativeSource AncestorType=ComboBoxItem}}"
                                        CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                        Width="35"
                                        Cursor="Arrow"
                                        Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                        CoverBrush="{Binding Foreground,RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Right"
                                        VerticalContentAlignment="Center"
                                        HorizontalContentAlignment="Center"
                                        FontSize="20"
                                        Content="×"></local:PUButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CanDelete"
                                 Value="False">
                            <Setter TargetName="btnDelete"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter TargetName="bdrMain"
                                    Property="Background"
                                    Value="{Binding SelectedBrush,RelativeSource={RelativeSource AncestorType=ComboBox}}" />
                            <Setter TargetName="txtContent"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="false" />
                                <Condition Property="IsMouseOver"
                                           Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="bdrMain"
                                    Property="Background"
                                    Value="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=ComboBox}}" />
                            <Setter TargetName="txtContent"
                                    Property="Opacity"
                                    Value="0.7" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:PUCheckBox}">
        <Setter Property="Foreground"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="Background"
                Value="Transparent"></Setter>
        <Setter Property="BorderBrush"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="BorderThickness"
                Value="1"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"></Setter>
        <Setter Property="Padding"
                Value="4,0,0,0"></Setter>
        <Setter Property="IsChecked"
                Value="False"></Setter>
        <Setter Property="Content"
                Value="CheckBox"></Setter>
        <Setter Property="Cursor"
                Value="Hand"></Setter>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Style.Triggers>
            <Trigger Property="CheckBoxStyle"
                     Value="General">
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUCheckBox}">
                            <StackPanel Orientation="Horizontal">
                                <Border x:Name="bdrOuter"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Width="{Binding InnerWidth,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Opacity="0.7">
                                    <Path x:Name="pCheck"
                                          Width="16"
                                          Height="16"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          Data="M2,9 L7.5,13.5 L 14.5,2.5"
                                          StrokeThickness="1.5"
                                          Stroke="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                          RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <ScaleTransform>
                                                <ScaleTransform.ScaleX>
                                                    <MultiBinding Converter="{StaticResource ScaleConverter}">
                                                        <Binding Path="InnerWidth"
                                                                 RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                        <Binding Path="InnerHeight"
                                                                 RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                    </MultiBinding>
                                                </ScaleTransform.ScaleX>
                                                <ScaleTransform.ScaleY>
                                                    <MultiBinding Converter="{StaticResource ScaleConverter}">
                                                        <Binding Path="InnerWidth"
                                                                 RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                        <Binding Path="InnerHeight"
                                                                 RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                    </MultiBinding>
                                                </ScaleTransform.ScaleY>
                                            </ScaleTransform>
                                        </Path.RenderTransform>
                                        <Path.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0"
                                                                 EndPoint="1,1">
                                                <GradientStopCollection>
                                                    <GradientStop Offset="0"
                                                                  Color="White"></GradientStop>
                                                    <GradientStop x:Name="offset"
                                                                  Offset="0"
                                                                  Color="Transparent"></GradientStop>
                                                </GradientStopCollection>
                                            </LinearGradientBrush>
                                        </Path.OpacityMask>
                                    </Path>
                                </Border>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="1"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="White"
                                                                Duration="0:0:0.05"
                                                                BeginTime="0:0:0.2"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="Transparent"
                                                                Duration="0:0:0.05"></ColorAnimation>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="0"
                                                                 Duration="0:0:0.1"
                                                                 BeginTime="0:0:0.05"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="bdrOuter"
                                            Property="Opacity"
                                            Value="1"></Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="CheckBoxStyle"
                     Value="Classic">
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUCheckBox}">
                            <StackPanel Orientation="Horizontal">
                                <Border x:Name="bdrOuter"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Width="{Binding InnerWidth,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Opacity="0.9">
                                    <Border x:Name="bdrInner"
                                            Margin="-0.5,0"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                            Opacity="0"
                                            Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=CheckBox}}">
                                        <Path x:Name="pCheck"
                                              Width="16"
                                              Height="16"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              Data="M2,9 L7.5,13.5 L 14.5,2.5"
                                              StrokeThickness="1.5"
                                              Stroke="White"
                                              RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <ScaleTransform>
                                                    <ScaleTransform.ScaleX>
                                                        <MultiBinding Converter="{StaticResource ScaleConverter}">
                                                            <Binding Path="InnerWidth"
                                                                     RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                            <Binding Path="InnerHeight"
                                                                     RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                        </MultiBinding>
                                                    </ScaleTransform.ScaleX>
                                                    <ScaleTransform.ScaleY>
                                                        <MultiBinding Converter="{StaticResource ScaleConverter}">
                                                            <Binding Path="InnerWidth"
                                                                     RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                            <Binding Path="InnerHeight"
                                                                     RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                        </MultiBinding>
                                                    </ScaleTransform.ScaleY>
                                                </ScaleTransform>
                                            </Path.RenderTransform>
                                            <Path.OpacityMask>
                                                <LinearGradientBrush StartPoint="0,0"
                                                                     EndPoint="1,1">
                                                    <GradientStopCollection>
                                                        <GradientStop Offset="0"
                                                                      Color="White"></GradientStop>
                                                        <GradientStop x:Name="offset"
                                                                      Offset="0"
                                                                      Color="Transparent"></GradientStop>
                                                    </GradientStopCollection>
                                                </LinearGradientBrush>
                                            </Path.OpacityMask>
                                        </Path>
                                    </Border>
                                </Border>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrInner"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="1"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="White"
                                                                Duration="0:0:0.05"
                                                                BeginTime="0:0:0.2"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrInner"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.2"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="Transparent"
                                                                Duration="0:0:0.05"></ColorAnimation>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="0"
                                                                 Duration="0:0:0.1"
                                                                 BeginTime="0:0:0.05"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="bdrOuter"
                                            Property="Opacity"
                                            Value="1"></Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="CheckBoxStyle"
                     Value="Switch">
                <Setter Property="BorderBrush"
                        Value="LightGray"></Setter>
                <Setter Property="CoverBrush"
                        Value="LightGray"></Setter>
                <Setter Property="InnerHeight"
                        Value="25"></Setter>
                <Setter Property="InnerWidth"
                        Value="35"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUCheckBox}">
                            <StackPanel Orientation="Horizontal"
                                        Background="{TemplateBinding Background}">
                                <Grid Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                      Width="{Binding InnerWidth,RelativeSource={RelativeSource AncestorType=CheckBox}}">
                                    <Border x:Name="bdrOuter"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                            CornerRadius="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox},Converter={StaticResource ToHalfConverter}}">
                                    </Border>
                                    <Border x:Name="bdrInner"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="White"
                                            CornerRadius="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox},Converter={StaticResource ToHalfConverter}}"
                                            RenderTransformOrigin="0.5,0.5">
                                        <Border.RenderTransform>
                                            <ScaleTransform x:Name="scale"
                                                            ScaleX="1"
                                                            ScaleY="1"></ScaleTransform>
                                        </Border.RenderTransform>
                                    </Border>
                                    <Border HorizontalAlignment="Right"
                                            CornerRadius="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox},Converter={StaticResource ToHalfConverter}}"
                                            Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox},Converter={StaticResource ToggleHeightConverter}}"
                                            Width="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=CheckBox},Converter={StaticResource ToggleHeightConverter}}"
                                            Background="White">
                                        <Border.Effect>
                                            <DropShadowEffect x:Name="effect"
                                                              Color="DimGray"
                                                              Opacity="0.4"
                                                              BlurRadius="3"
                                                              ShadowDepth="0.5"
                                                              Direction="215"></DropShadowEffect>
                                        </Border.Effect>
                                        <Border.RenderTransform>
                                            <TranslateTransform x:Name="translate">
                                                <TranslateTransform.X>
                                                    <MultiBinding Converter="{StaticResource ToggleTranslateXConverter}">
                                                        <Binding Path="InnerWidth"
                                                                 RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                        <Binding Path="InnerHeight"
                                                                 RelativeSource="{RelativeSource AncestorType=CheckBox}"></Binding>
                                                    </MultiBinding>
                                                </TranslateTransform.X>
                                            </TranslateTransform>
                                        </Border.RenderTransform>
                                    </Border>
                                </Grid>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="scale"
                                                                     Storyboard.TargetProperty="ScaleX"
                                                                     To="0"
                                                                     Duration="0:0:0.3">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"></CubicEase>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <DoubleAnimation Storyboard.TargetName="scale"
                                                                     Storyboard.TargetProperty="ScaleY"
                                                                     To="0"
                                                                     Duration="0:0:0.3">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"></CubicEase>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <DoubleAnimation Storyboard.TargetName="translate"
                                                                     Storyboard.TargetProperty="X"
                                                                     To="-1"
                                                                     Duration="0:0:0.3">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"></CubicEase>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="scale"
                                                                 Storyboard.TargetProperty="ScaleX"
                                                                 Duration="0:0:0.3">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="scale"
                                                                 Storyboard.TargetProperty="ScaleY"
                                                                 Duration="0:0:0.3">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="translate"
                                                                 Storyboard.TargetProperty="X"
                                                                 Duration="0:0:0.3">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <Storyboard>
                                                    <DoubleAnimation  Storyboard.TargetName="effect"
                                                                      Storyboard.TargetProperty="BlurRadius"
                                                                      To="5"
                                                                      Duration="0:0:0.3"></DoubleAnimation>
                                                    <DoubleAnimation  Storyboard.TargetName="effect"
                                                                      Storyboard.TargetProperty="ShadowDepth"
                                                                      To="1"
                                                                      Duration="0:0:0.3"></DoubleAnimation>
                                                </Storyboard>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation  Storyboard.TargetName="effect"
                                                                  Storyboard.TargetProperty="BlurRadius"
                                                                  Duration="0:0:0.3"></DoubleAnimation>
                                                <DoubleAnimation  Storyboard.TargetName="effect"
                                                                  Storyboard.TargetProperty="ShadowDepth"
                                                                  Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="CheckBoxStyle"
                     Value="Branch">
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="BorderThickness"
                        Value="5,0,0,0"></Setter>
                <Setter Property="Padding"
                        Value="10,0,0,0"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUCheckBox}">
                            <Grid>
                                <Grid>
                                    <Border x:Name="bdrCover"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                            Opacity="0.2" />
                                    <Border x:Name="bdrInner"
                                            BorderBrush="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                            Opacity="0.7">
                                        <Border.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0"
                                                                 EndPoint="0,1">
                                                <GradientStopCollection>
                                                    <GradientStop Offset="0"
                                                                  Color="White"></GradientStop>
                                                    <GradientStop x:Name="offset"
                                                                  Offset="0"
                                                                  Color="Transparent"></GradientStop>
                                                </GradientStopCollection>
                                            </LinearGradientBrush>
                                        </Border.OpacityMask>
                                    </Border>
                                </Grid>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.4"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.2"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="1"
                                                                 Duration="0:0:0.05"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="White"
                                                                Duration="0:0:0.05"
                                                                BeginTime="0:0:0.05"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="Transparent"
                                                                Duration="0:0:0.05"></ColorAnimation>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="0"
                                                                 Duration="0:0:0.05"
                                                                 BeginTime="0:0:0.05"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="CheckBoxStyle"
                     Value="Button">
                <Setter Property="CoverBrush"
                        Value="#EE666666"></Setter>
                <Setter Property="BorderThickness"
                        Value="0"></Setter>
                <Setter Property="Padding"
                        Value="10,0"></Setter>
                <Setter Property="HorizontalAlignment"
                        Value="Left"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUCheckBox}">
                            <Grid x:Name="GrdMain"
                                  Height="{TemplateBinding Height}"
                                  Width="{TemplateBinding Width}"
                                  VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                  HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Background="{TemplateBinding Background}"></Border>
                                <Border x:Name="bdrCover"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Opacity="0"></Border>
                                <Border x:Name="bdrCheckedCover"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=CheckBox}}"
                                        Opacity="0"></Border>
                                <Label x:Name="lblContent"
                                       Content="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Margin="{TemplateBinding Padding}">
                                </Label>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.4"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Setter TargetName="bdrCheckedCover"
                                            Property="Opacity"
                                            Value="1"></Setter>
                                    <Setter TargetName="lblContent"
                                            Property="Foreground"
                                            Value="White"></Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:PURadioButton}">
        <Setter Property="Foreground"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="Background"
                Value="Transparent"></Setter>
        <Setter Property="BorderBrush"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="BorderThickness"
                Value="1"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Left"></Setter>
        <Setter Property="Padding"
                Value="4,0,0,0"></Setter>
        <Setter Property="IsChecked"
                Value="False"></Setter>
        <Setter Property="Content"
                Value="RadioButton"></Setter>
        <Setter Property="Cursor"
                Value="Hand"></Setter>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Style.Triggers>
            <Trigger Property="RadioButtonStyle"
                     Value="General">
                <Setter Property="Background"
                        Value="White"></Setter>
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="BorderCornerRadius"
                        Value="10"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PURadioButton}">
                            <StackPanel Orientation="Horizontal">
                                <Grid Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                      Width="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}">
                                    <Ellipse x:Name="ellOuter"
                                             Stroke="{TemplateBinding BorderBrush}"
                                             StrokeThickness="{TemplateBinding BorderThickness}"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Center"
                                             Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             Width="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             Fill="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RadioButton}}">
                                    </Ellipse>
                                    <Ellipse x:Name="ellInner"
                                             Fill="{TemplateBinding Background}"
                                             Stroke="Transparent"
                                             StrokeThickness="{TemplateBinding BorderThickness}"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Center"
                                             Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             Width="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             RenderTransformOrigin="0.5,0.5">
                                        <Ellipse.RenderTransform>
                                            <ScaleTransform x:Name="scale1"
                                                            ScaleX="1"
                                                            ScaleY="1"></ScaleTransform>
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                    <Ellipse Fill="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             Stroke="Transparent"
                                             StrokeThickness="{TemplateBinding BorderThickness}"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Center"
                                             Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             Width="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             RenderTransformOrigin="0.5,0.5">
                                        <Ellipse.RenderTransform>
                                            <ScaleTransform x:Name="scale2"
                                                            ScaleX="0"
                                                            ScaleY="0"></ScaleTransform>
                                        </Ellipse.RenderTransform>
                                    </Ellipse>
                                </Grid>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0.82"
                                                                 Duration="0:0:0.4"
                                                                 Storyboard.TargetName="scale1"
                                                                 Storyboard.TargetProperty="ScaleX">
                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut"></BackEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation To="0.82"
                                                                 Duration="0:0:0.4"
                                                                 Storyboard.TargetName="scale1"
                                                                 Storyboard.TargetProperty="ScaleY">
                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut"></BackEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation To="0.36"
                                                                 Duration="0:0:0.5"
                                                                 Storyboard.TargetName="scale2"
                                                                 Storyboard.TargetProperty="ScaleX">
                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut"></BackEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation To="0.36"
                                                                 Duration="0:0:0.5"
                                                                 Storyboard.TargetName="scale2"
                                                                 Storyboard.TargetProperty="ScaleY">
                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut"></BackEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="1"
                                                                 Duration="0:0:0.3"
                                                                 Storyboard.TargetName="scale1"
                                                                 Storyboard.TargetProperty="ScaleX">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseIn"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation To="1"
                                                                 Duration="0:0:0.2"
                                                                 Storyboard.TargetName="scale1"
                                                                 Storyboard.TargetProperty="ScaleY">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseIn"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation To="0"
                                                                 Duration="0:0:0.3"
                                                                 Storyboard.TargetName="scale2"
                                                                 Storyboard.TargetProperty="ScaleX">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseIn"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation To="0"
                                                                 Duration="0:0:0.3"
                                                                 Storyboard.TargetName="scale2"
                                                                 Storyboard.TargetProperty="ScaleY">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseIn"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="ellOuter"
                                            Property="Opacity"
                                            Value="1"></Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="RadioButtonStyle"
                     Value="Classic">
                <Setter Property="BorderBrush"
                        Value="Transparent"></Setter>
                <Setter Property="Background"
                        Value="#66AAAAAA"></Setter>
                <Setter Property="CoverBrush"
                        Value="#666666"></Setter>
                <Setter Property="BorderCornerRadius"
                        Value="10"></Setter>
                <Setter Property="BorderThickness"
                        Value="0"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PURadioButton}">
                            <StackPanel Orientation="Horizontal">
                                <Grid Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                      Width="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}">
                                    <Ellipse x:Name="ellOuter"
                                             Stroke="{TemplateBinding BorderBrush}"
                                             StrokeThickness="{TemplateBinding BorderThickness}"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Center"
                                             Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             Width="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             Fill="{TemplateBinding Background}">
                                    </Ellipse>
                                    <Ellipse x:Name="ellInner"
                                             Fill="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             Stroke="Transparent"
                                             StrokeThickness="{TemplateBinding BorderThickness}"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Center"
                                             Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             Width="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                             RenderTransformOrigin="0.5,0.5">
                                        <Ellipse.RenderTransform>
                                            <ScaleTransform x:Name="scale1"
                                                            ScaleX="0"
                                                            ScaleY="0"></ScaleTransform>
                                        </Ellipse.RenderTransform>
                                        <Ellipse.Effect>
                                            <DropShadowEffect Color="#FFFFFF"
                                                              ShadowDepth="0"
                                                              BlurRadius="5"
                                                              Opacity="0.5"></DropShadowEffect>
                                        </Ellipse.Effect>
                                    </Ellipse>
                                </Grid>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0.5"
                                                                 Duration="0:0:0.3"
                                                                 Storyboard.TargetName="scale1"
                                                                 Storyboard.TargetProperty="ScaleX">
                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut"></BackEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation To="0.5"
                                                                 Duration="0:0:0.3"
                                                                 Storyboard.TargetName="scale1"
                                                                 Storyboard.TargetProperty="ScaleY">
                                                    <DoubleAnimation.EasingFunction>
                                                        <BackEase EasingMode="EaseOut"></BackEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0"
                                                                 Duration="0:0:0.3"
                                                                 Storyboard.TargetName="scale1"
                                                                 Storyboard.TargetProperty="ScaleX">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseIn"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation To="0"
                                                                 Duration="0:0:0.3"
                                                                 Storyboard.TargetName="scale1"
                                                                 Storyboard.TargetProperty="ScaleY">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseIn"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="ellOuter"
                                            Property="Opacity"
                                            Value="1"></Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="RadioButtonStyle"
                     Value="Switch">
                <Setter Property="BorderBrush"
                        Value="LightGray"></Setter>
                <Setter Property="CoverBrush"
                        Value="LightGray"></Setter>
                <Setter Property="InnerHeight"
                        Value="25"></Setter>
                <Setter Property="InnerWidth"
                        Value="35"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PURadioButton}">
                            <StackPanel Orientation="Horizontal"
                                        Height="{TemplateBinding Height}"
                                        Width="{TemplateBinding Width}">
                                <Grid Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                      Width="{Binding InnerWidth,RelativeSource={RelativeSource AncestorType=RadioButton}}">
                                    <Border x:Name="bdrOuter"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                            CornerRadius="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton},Converter={StaticResource ToHalfConverter}}">
                                    </Border>
                                    <Border x:Name="bdrInner"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="White"
                                            CornerRadius="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton},Converter={StaticResource ToHalfConverter}}"
                                            RenderTransformOrigin="0.5,0.5">
                                        <Border.RenderTransform>
                                            <ScaleTransform x:Name="scale"
                                                            ScaleX="1"
                                                            ScaleY="1"></ScaleTransform>
                                        </Border.RenderTransform>
                                    </Border>
                                    <Border HorizontalAlignment="Right"
                                            CornerRadius="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton},Converter={StaticResource ToHalfConverter}}"
                                            Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton},Converter={StaticResource ToggleHeightConverter}}"
                                            Width="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=RadioButton},Converter={StaticResource ToggleHeightConverter}}"
                                            Background="White">
                                        <Border.Effect>
                                            <DropShadowEffect x:Name="effect"
                                                              Color="DimGray"
                                                              Opacity="0.4"
                                                              BlurRadius="3"
                                                              ShadowDepth="0.5"
                                                              Direction="215"></DropShadowEffect>
                                        </Border.Effect>
                                        <Border.RenderTransform>
                                            <TranslateTransform x:Name="translate">
                                                <TranslateTransform.X>
                                                    <MultiBinding Converter="{StaticResource ToggleTranslateXConverter}">
                                                        <Binding Path="InnerWidth"
                                                                 RelativeSource="{RelativeSource AncestorType=RadioButton}"></Binding>
                                                        <Binding Path="InnerHeight"
                                                                 RelativeSource="{RelativeSource AncestorType=RadioButton}"></Binding>
                                                    </MultiBinding>
                                                </TranslateTransform.X>
                                            </TranslateTransform>
                                        </Border.RenderTransform>
                                    </Border>
                                </Grid>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="scale"
                                                                     Storyboard.TargetProperty="ScaleX"
                                                                     To="0"
                                                                     Duration="0:0:0.3">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"></CubicEase>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <DoubleAnimation Storyboard.TargetName="scale"
                                                                     Storyboard.TargetProperty="ScaleY"
                                                                     To="0"
                                                                     Duration="0:0:0.3">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"></CubicEase>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <DoubleAnimation Storyboard.TargetName="translate"
                                                                     Storyboard.TargetProperty="X"
                                                                     To="-1"
                                                                     Duration="0:0:0.3">
                                                        <DoubleAnimation.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut"></CubicEase>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="scale"
                                                                 Storyboard.TargetProperty="ScaleX"
                                                                 Duration="0:0:0.3">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="scale"
                                                                 Storyboard.TargetProperty="ScaleY"
                                                                 Duration="0:0:0.3">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="translate"
                                                                 Storyboard.TargetProperty="X"
                                                                 Duration="0:0:0.3">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"></CubicEase>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>

                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <Storyboard>
                                                    <DoubleAnimation  Storyboard.TargetName="effect"
                                                                      Storyboard.TargetProperty="BlurRadius"
                                                                      To="5"
                                                                      Duration="0:0:0.3"></DoubleAnimation>
                                                    <DoubleAnimation  Storyboard.TargetName="effect"
                                                                      Storyboard.TargetProperty="ShadowDepth"
                                                                      To="1"
                                                                      Duration="0:0:0.3"></DoubleAnimation>
                                                </Storyboard>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation  Storyboard.TargetName="effect"
                                                                  Storyboard.TargetProperty="BlurRadius"
                                                                  Duration="0:0:0.3"></DoubleAnimation>
                                                <DoubleAnimation  Storyboard.TargetName="effect"
                                                                  Storyboard.TargetProperty="ShadowDepth"
                                                                  Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>

                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="RadioButtonStyle"
                     Value="Branch">
                <Setter Property="CoverBrush"
                        Value="{StaticResource Theme}"></Setter>
                <Setter Property="BorderThickness"
                        Value="5,0,0,0"></Setter>
                <Setter Property="Padding"
                        Value="10,0,0,0"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PURadioButton}">
                            <Grid  Height="{TemplateBinding Height}"
                                   Width="{TemplateBinding Width}">
                                <Grid>
                                    <Border x:Name="bdrCover"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                            Opacity="0.2" />
                                    <Border x:Name="bdrInner"
                                            BorderBrush="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                            Opacity="0.7">
                                        <Border.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0"
                                                                 EndPoint="0,1">
                                                <GradientStopCollection>
                                                    <GradientStop Offset="0"
                                                                  Color="White"></GradientStop>
                                                    <GradientStop x:Name="offset"
                                                                  Offset="0"
                                                                  Color="Transparent"></GradientStop>
                                                </GradientStopCollection>
                                            </LinearGradientBrush>
                                        </Border.OpacityMask>
                                    </Border>
                                </Grid>
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  ContentSource="Content"></ContentPresenter>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.4"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.2"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="1"
                                                                 Duration="0:0:0.05"></DoubleAnimation>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="White"
                                                                Duration="0:0:0.05"
                                                                BeginTime="0:0:0.05"></ColorAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="offset"
                                                                Storyboard.TargetProperty="Color"
                                                                To="Transparent"
                                                                Duration="0:0:0.05"></ColorAnimation>
                                                <DoubleAnimation Storyboard.TargetName="offset"
                                                                 Storyboard.TargetProperty="Offset"
                                                                 To="0"
                                                                 Duration="0:0:0.05"
                                                                 BeginTime="0:0:0.05"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="RadioButtonStyle"
                     Value="Button">
                <Setter Property="CoverBrush"
                        Value="#EE666666"></Setter>
                <Setter Property="BorderThickness"
                        Value="0"></Setter>
                <Setter Property="Padding"
                        Value="10,0"></Setter>
                <Setter Property="HorizontalAlignment"
                        Value="Left"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PURadioButton}">
                            <Grid x:Name="GrdMain"
                                  VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                  Height="{TemplateBinding Height}"
                                  Width="{TemplateBinding Width}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                        Background="{TemplateBinding Background}"></Border>
                                <Border x:Name="bdrCover"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                        Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                        Opacity="0"></Border>
                                <Border x:Name="bdrCheckedCover"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                        Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=RadioButton}}"
                                        Opacity="0"></Border>
                                <Label x:Name="lblContent"
                                       Content="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Margin="{TemplateBinding Padding}">
                                </Label>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0.4"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.3"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsChecked"
                                         Value="True">
                                    <Setter TargetName="bdrCheckedCover"
                                            Property="Opacity"
                                            Value="1"></Setter>
                                    <Setter TargetName="lblContent"
                                            Property="Foreground"
                                            Value="White"></Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Opacity"
                                            Value="0.4"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:PUTreeViewItem}">
        <Setter Property="Background"
                Value="Transparent"></Setter>
        <Setter Property="BorderBrush"
                Value="Transparent"></Setter>
        <Setter Property="Foreground"
                Value="DimGray"></Setter>
        <Setter Property="BorderThickness"
                Value="0"></Setter>
        <Setter Property="FontSize"
                Value="14"></Setter>
        <Setter Property="IsExpanded"
                Value="False"></Setter>
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding TreeViewStyle,RelativeSource={RelativeSource AncestorType=TreeView}}"
                         Value="General">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUTreeViewItem}">
                            <StackPanel>
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=TreeView}}">
                                    <Grid>
                                        <Border x:Name="bdrCover"
                                                Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=TreeView}}"
                                                Opacity="0">
                                        </Border>
                                        <Border x:Name="bdrSelectedCover"
                                                Background="{Binding ChoosedBrush,RelativeSource={RelativeSource AncestorType=TreeView}}"
                                                Opacity="0">
                                        </Border>
                                        <Grid>
                                            <ToggleButton x:Name="toggle"
                                                          Width="20"
                                                          Margin="5,0,0,0"
                                                          VerticalAlignment="{Binding VerticalContentAlignment,RelativeSource={RelativeSource AncestorType=TreeView}}"
                                                          HorizontalAlignment="Left"
                                                          Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TreeView}}"
                                                          IsChecked="{TemplateBinding IsExpanded}">
                                                <ToggleButton.Template>
                                                    <ControlTemplate TargetType="ToggleButton">
                                                        <Border>
                                                            <ContentPresenter VerticalAlignment="Center"
                                                                              HorizontalAlignment="Center" />
                                                        </Border>
                                                    </ControlTemplate>
                                                </ToggleButton.Template>
                                                <ToggleButton.Content>
                                                    <Grid x:Name="arrow"
                                                          VerticalAlignment="Center"
                                                          HorizontalAlignment="Left"
                                                          Width="{TemplateBinding Height}"
                                                          Height="{TemplateBinding Height}">
                                                        <Path x:Name="arrow1"
                                                              VerticalAlignment="Center"
                                                              HorizontalAlignment="Left"
                                                              Margin="5,0,0,0"
                                                              Data="M2,5.5 L7,9.5 L12,5.5"
                                                              Width="15"
                                                              Height="15"
                                                              Fill="{x:Null}"
                                                              Stroke="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TreeView} }"
                                                              RenderTransformOrigin="0.5,0.5">
                                                        </Path>
                                                        <Path x:Name="arrow2"
                                                              Opacity="0"
                                                              VerticalAlignment="Center"
                                                              HorizontalAlignment="Left"
                                                              Margin="5,0,0,0"
                                                              Data="M2,5.5 L7,9.5 L12,5.5"
                                                              Width="15"
                                                              Height="15"
                                                              Fill="{x:Null}"
                                                              Stroke="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TreeView} }"
                                                              RenderTransformOrigin="0.5,0.5">
                                                            <Path.RenderTransform>
                                                                <RotateTransform Angle="180"></RotateTransform>
                                                            </Path.RenderTransform>
                                                        </Path>
                                                    </Grid>
                                                </ToggleButton.Content>
                                            </ToggleButton>
                                            <Grid>
                                                <Label x:Name="content"
                                                       Padding="{TemplateBinding Padding}"
                                                       Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TreeView} }"
                                                       FontSize="{Binding FontSize,RelativeSource={RelativeSource  AncestorType=TreeView}}"
                                                       FontFamily="{Binding FontFamily,RelativeSource={RelativeSource  AncestorType=TreeView}}"
                                                       VerticalAlignment="{Binding VerticalContentAlignment,RelativeSource={RelativeSource AncestorType=TreeView}}"
                                                       HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=TreeView}}"
                                                       Content="{TemplateBinding Header}" />
                                            </Grid>
                                        </Grid>
                                    </Grid>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" />
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver"
                                                   Value="True"></Condition>
                                        <Condition Property="IsChoosed"
                                                   Value="False"></Condition>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="1"
                                                                 Duration="0:0:0.2"
                                                                 Storyboard.TargetName="bdrCover"
                                                                 Storyboard.TargetProperty="Opacity" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation  Duration="0:0:0.2"
                                                                  Storyboard.TargetName="bdrCover"
                                                                  Storyboard.TargetProperty="Opacity" />
                                            </Storyboard>
                                        </BeginStoryboard>

                                    </MultiTrigger.ExitActions>
                                </MultiTrigger>
                                <Trigger Property="IsExpanded"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="arrow1"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.25"></DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="arrow2"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.25"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="arrow2"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.25"></DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="arrow1"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.25"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsExpanded"
                                         Value="False">
                                    <Setter TargetName="ItemsHost"
                                            Property="Visibility"
                                            Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsExpanded"
                                         Value="True">
                                    <Setter TargetName="ItemsHost"
                                            Property="Visibility"
                                            Value="Visible" />
                                </Trigger>
                                <Trigger Property="HasItems"
                                         Value="False">
                                    <Setter TargetName="toggle"
                                            Property="Visibility"
                                            Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsChoosed"
                                         Value="True">
                                    <Setter TargetName="bdrSelectedCover"
                                            Property="Opacity"
                                            Value="1" />
                                </Trigger>
                                <DataTrigger Binding="{Binding HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType=TreeView}}"
                                             Value="Left">
                                    <Setter TargetName="content"
                                            Property="Margin"
                                            Value="30,0,0,0"></Setter>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding TreeViewStyle,RelativeSource={RelativeSource AncestorType=TreeView}}"
                         Value="Classic">
                <Setter Property="Cursor"
                        Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUTreeViewItem}">
                            <StackPanel>
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        Height="{Binding InnerHeight,RelativeSource={RelativeSource AncestorType=TreeView}}">
                                    <Grid>
                                        <ToggleButton x:Name="toggle"
                                                      Margin="5,0,0,0"
                                                      Width="20"
                                                      VerticalAlignment="{Binding VerticalContentAlignment,RelativeSource={RelativeSource AncestorType=TreeView}}"
                                                      HorizontalAlignment="Left"
                                                      Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TreeView} }"
                                                      IsChecked="{TemplateBinding IsExpanded}">
                                            <ToggleButton.Template>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border>
                                                        <ContentPresenter VerticalAlignment="Center"
                                                                          HorizontalAlignment="Center" />
                                                    </Border>
                                                </ControlTemplate>
                                            </ToggleButton.Template>
                                            <ToggleButton.Content>
                                                <Grid x:Name="arrow"
                                                      VerticalAlignment="Center"
                                                      HorizontalAlignment="Left"
                                                      Width="{TemplateBinding Height}"
                                                      Height="{TemplateBinding Height}">
                                                    <Path x:Name="arrow1"
                                                          VerticalAlignment="Center"
                                                          HorizontalAlignment="Left"
                                                          Margin="5,0,0,0"
                                                          Data="M 4,3 L10,7.5 L 4,12 Z"
                                                          Width="15"
                                                          Height="15"
                                                          Stroke="{x:Null}"
                                                          Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TreeView} }"
                                                          RenderTransformOrigin="0.5,0.5">
                                                    </Path>
                                                    <Path x:Name="arrow2"
                                                          Opacity="0"
                                                          VerticalAlignment="Center"
                                                          HorizontalAlignment="Left"
                                                          Margin="5,0,0,0"
                                                          Data="M 4,3 L10,7.5 L 4,12 Z"
                                                          Width="15"
                                                          Height="15"
                                                          Stroke="{x:Null}"
                                                          Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TreeView} }"
                                                          RenderTransformOrigin="0.5,0.5">
                                                        <Path.RenderTransform>
                                                            <RotateTransform Angle="45"></RotateTransform>
                                                        </Path.RenderTransform>
                                                    </Path>
                                                </Grid>
                                            </ToggleButton.Content>
                                        </ToggleButton>
                                        <Grid>
                                            <Label x:Name="content"
                                                   Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TreeView} }"
                                                   FontSize="{Binding FontSize,RelativeSource={RelativeSource  AncestorType=TreeView}}"
                                                   FontFamily="{Binding FontFamily,RelativeSource={RelativeSource  AncestorType=TreeView}}"
                                                   VerticalAlignment="{Binding VerticalContentAlignment,RelativeSource={RelativeSource AncestorType=TreeView}}"
                                                   HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=TreeView}}"
                                                   Content="{TemplateBinding Header}" />
                                        </Grid>
                                    </Grid>
                                </Border>
                                <ItemsPresenter x:Name="ItemsHost" />
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded"
                                         Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="arrow1"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.25"></DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="arrow2"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.25"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="arrow2"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0:0:0.25"></DoubleAnimation>
                                                <DoubleAnimation Storyboard.TargetName="arrow1"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0:0:0.25"></DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsExpanded"
                                         Value="False">
                                    <Setter TargetName="ItemsHost"
                                            Property="Visibility"
                                            Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsExpanded"
                                         Value="True">
                                    <Setter TargetName="ItemsHost"
                                            Property="Visibility"
                                            Value="Visible" />
                                </Trigger>
                                <Trigger Property="HasItems"
                                         Value="False">
                                    <Setter TargetName="toggle"
                                            Property="Visibility"
                                            Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsChoosed"
                                         Value="True">
                                    <Setter Property="Foreground"
                                            TargetName="content"
                                            Value="{Binding ChoosedBrush,RelativeSource={RelativeSource AncestorType=TreeView}}" />
                                </Trigger>
                                <DataTrigger Binding="{Binding HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType=TreeView}}"
                                             Value="Left">
                                    <Setter TargetName="content"
                                            Property="Margin"
                                            Value="27,0,0,0"></Setter>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type local:PUTreeView}">
        <Setter Property="Foreground"
                Value="#696969" />
        <Setter Property="BorderThickness"
                Value="0"></Setter>
        <Setter Property="CoverBrush"
                Value="#11666666"></Setter>
        <Setter Property="ChoosedBrush"
                Value="#22666666"></Setter>
        <Setter Property="InnerHeight"
                Value="40"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}">
                        <ScrollViewer VerticalScrollBarVisibility="Auto"
                                      HorizontalScrollBarVisibility="Disabled"
                                      VerticalAlignment="Stretch"
                                      HorizontalAlignment="Stretch"
                                      Style="{StaticResource MiniScrollViewer}">
                            <VirtualizingStackPanel Margin="0,0,0,0"
                                                    VirtualizationMode="Recycling"
                                                    IsItemsHost="True">
                            </VirtualizingStackPanel>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="TreeViewStyle"
                     Value="Classic">
                <Setter Property="ChoosedBrush"
                        Value="#000000" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:PUProgressBar}">
        <Setter Property="BorderBrush"
                Value="LightGray"></Setter>
        <Setter Property="BorderThickness"
                Value="1"></Setter>
        <Setter Property="Background"
                Value="Transparent"></Setter>
        <Setter Property="CoverBrush"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="Foreground"
                Value="#AAAAAA"></Setter>
        <Setter Property="FontSize"
                Value="12"></Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ProgressDirection"
                               Value="LeftToRight" />
                    <Condition Property="ProgressBarStyle"
                               Value="General" />
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUProgressBar}">
                            <Grid>
                                <Border  BorderBrush="{TemplateBinding BorderBrush}"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Control}}">
                                    <Border Background="{TemplateBinding Background}"
                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Control}}">
                                        <Border.OpacityMask>
                                            <VisualBrush>
                                                <VisualBrush.Visual>
                                                    <Border Background="Black"
                                                            Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Border}}"
                                                            Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Border}}"
                                                            CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Control}}" />
                                                </VisualBrush.Visual>
                                            </VisualBrush>
                                        </Border.OpacityMask>
                                        <Border Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=Control}}"
                                                Width="{Binding InnerWidth,RelativeSource={RelativeSource AncestorType=Control}}"
                                                HorizontalAlignment="Left">
                                            <Border.CornerRadius>
                                                <MultiBinding Converter="{StaticResource GeneralProgressBarConverter}">
                                                    <Binding Path="BorderCornerRadius"
                                                             RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                                    <Binding Path="ProgressDirection"
                                                             RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                                </MultiBinding>
                                            </Border.CornerRadius>
                                        </Border>
                                    </Border>

                                </Border>
                                <Label x:Name="lblContent"
                                       Content="{Binding PercentString,RelativeSource={RelativeSource AncestorType=Control}}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Visibility="Collapsed"></Label>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPercentShow"
                                         Value="True">
                                    <Setter TargetName="lblContent"
                                            Property="Visibility"
                                            Value="Visible" />
                                </Trigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ProgressDirection"
                               Value="RightToLeft" />
                    <Condition Property="ProgressBarStyle"
                               Value="General" />
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUProgressBar}">
                            <Grid>
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Control}}"
                                        ClipToBounds="True">
                                    <Border Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=Control}}"
                                            Width="{Binding InnerWidth,RelativeSource={RelativeSource AncestorType=Control}}"
                                            HorizontalAlignment="Right">
                                        <Border.CornerRadius>
                                            <MultiBinding Converter="{StaticResource GeneralProgressBarConverter}">
                                                <Binding Path="BorderCornerRadius"
                                                         RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                                <Binding Path="ProgressDirection"
                                                         RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                            </MultiBinding>
                                        </Border.CornerRadius>
                                    </Border>

                                </Border>
                                <Label x:Name="lblContent"
                                       Content="{Binding PercentString,RelativeSource={RelativeSource AncestorType=Control}}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"></Label>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPercentShow"
                                         Value="True">
                                    <Setter TargetName="lblContent"
                                            Property="Visibility"
                                            Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ProgressDirection"
                               Value="BottomToTop" />
                    <Condition Property="ProgressBarStyle"
                               Value="General" />
                </MultiTrigger.Conditions>
                <Setter Property="FontSize"
                        Value="10"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUProgressBar}">
                            <Grid>
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Control}}"
                                        ClipToBounds="True">
                                    <Border Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=Control}}"
                                            Height="{Binding InnerWidth,RelativeSource={RelativeSource AncestorType=Control}}"
                                            VerticalAlignment="Bottom">
                                        <Border.CornerRadius>
                                            <MultiBinding Converter="{StaticResource GeneralProgressBarConverter}">
                                                <Binding Path="BorderCornerRadius"
                                                         RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                                <Binding Path="ProgressDirection"
                                                         RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                            </MultiBinding>
                                        </Border.CornerRadius>
                                    </Border>
                                </Border>
                                <Label x:Name="lblContent"
                                       Content="{Binding PercentString,RelativeSource={RelativeSource AncestorType=Control}}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"></Label>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPercentShow"
                                         Value="True">
                                    <Setter TargetName="lblContent"
                                            Property="Visibility"
                                            Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ProgressDirection"
                               Value="TopToBottom" />
                    <Condition Property="ProgressBarStyle"
                               Value="General" />
                </MultiTrigger.Conditions>
                <Setter Property="FontSize"
                        Value="10"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUProgressBar}">
                            <Grid>
                                <Border BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=Control}}"
                                        ClipToBounds="True">
                                    <Border Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=Control}}"
                                            Height="{Binding InnerWidth,RelativeSource={RelativeSource AncestorType=Control}}"
                                            VerticalAlignment="Top">
                                        <Border.CornerRadius>
                                            <MultiBinding Converter="{StaticResource GeneralProgressBarConverter}">
                                                <Binding Path="BorderCornerRadius"
                                                         RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                                <Binding Path="ProgressDirection"
                                                         RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                            </MultiBinding>
                                        </Border.CornerRadius>
                                    </Border>
                                </Border>
                                <Label x:Name="lblContent"
                                       Content="{Binding PercentString,RelativeSource={RelativeSource AncestorType=Control}}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"></Label>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPercentShow"
                                         Value="True">
                                    <Setter TargetName="lblContent"
                                            Property="Visibility"
                                            Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
            <Trigger Property="ProgressBarStyle"
                     Value="Ring">
                <Setter Property="FontSize"
                        Value="10"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUProgressBar}">
                            <Grid Background="{TemplateBinding Background}"
                                  Height="{TemplateBinding Height}"
                                  Width="{TemplateBinding Width}">
                                <Path StrokeStartLineCap="Round"
                                      StrokeEndLineCap="Round"
                                      Stroke="{TemplateBinding BorderBrush}"
                                      StrokeThickness="{Binding StrokeThickness,RelativeSource={RelativeSource AncestorType=Control} }">
                                    <Path.Data>
                                        <MultiBinding Converter="{StaticResource RingProgressBarConverter}">
                                            <Binding Path="ActualWidth"
                                                     RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                            <Binding Path="ActualHeight"
                                                     RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                            <Binding Path="StrokeThickness"
                                                     RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                        </MultiBinding>
                                    </Path.Data>
                                </Path>
                                <Path StrokeStartLineCap="Round"
                                      StrokeEndLineCap="Round"
                                      Stroke="{TemplateBinding CoverBrush}"
                                      StrokeThickness="{Binding StrokeThickness,RelativeSource={RelativeSource AncestorType=Control} }">
                                    <Path.Data>
                                        <MultiBinding Converter="{StaticResource RingProgressBarConverter}">
                                            <Binding Path="ActualWidth"
                                                     RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                            <Binding Path="ActualHeight"
                                                     RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                            <Binding Path="StrokeThickness"
                                                     RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                            <Binding Path="InnerPercent"
                                                     RelativeSource="{RelativeSource AncestorType=Control}"></Binding>
                                        </MultiBinding>
                                    </Path.Data>
                                </Path>
                                <Label x:Name="lblContent"
                                       Content="{Binding PercentString,RelativeSource={RelativeSource AncestorType=Control}}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Foreground="{TemplateBinding Foreground}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontFamily="{TemplateBinding FontFamily}"
                                       Visibility="Collapsed"></Label>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPercentShow"
                                         Value="True">
                                    <Setter TargetName="lblContent"
                                            Property="Visibility"
                                            Value="Visible" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:PUTabControl}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Setter Property="BorderBrush"
                Value="LightGray"></Setter>
        <Setter Property="Foreground"
                Value="DimGray"></Setter>
        <Setter Property="SelectedBrush"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="Background"
                Value="Transparent"></Setter>
        <Style.Triggers>
            <Trigger Property="TabStripPlacement"
                     Value="Top">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUTabControl}">
                            <Grid ClipToBounds="True"
                                  KeyboardNavigation.TabNavigation="Local"
                                  HorizontalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <local:PURepeatButton x:Name="btnLeft"
                                                          Margin="5,0"
                                                          RepeatButtonStyle="Link"
                                                          Command="{Binding LeftCommand,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                          CommandParameter="{Binding ElementName=scrollViewer}"
                                                          VerticalAlignment="Center"
                                                          HorizontalAlignment="Left"
                                                          Foreground="{TemplateBinding Foreground}"
                                                          Content=""
                                                          FontSize="18"
                                                          FontFamily="{DynamicResource IconFont}"></local:PURepeatButton>
                                    <Grid  Grid.Column="1">
                                        <ScrollViewer x:Name="scrollViewer"
                                                      Style="{StaticResource MiniScrollViewer}"
                                                      VerticalScrollBarVisibility="Disabled"
                                                      HorizontalScrollBarVisibility="Hidden"
                                                      Margin="0,0,0,1"
                                                      VerticalAlignment="Stretch"
                                                      HorizontalAlignment="Stretch">
                                            <VirtualizingStackPanel Orientation="Horizontal"
                                                                    VirtualizationMode="Recycling">
                                                <TabPanel x:Name="HeaderPanel"
                                                          IsItemsHost="True"></TabPanel>
                                            </VirtualizingStackPanel>
                                        </ScrollViewer>
                                        <Border BorderThickness="0,0,0,1"
                                                Margin="{Binding Path=ActualWidth,ElementName=HeaderPanel,Converter={StaticResource WidthToMarginConverter}}"
                                                BorderBrush="{TemplateBinding BorderBrush}"></Border>
                                    </Grid>
                                    <local:PURepeatButton x:Name="btnRight"
                                                          Grid.Column="2"
                                                          RepeatButtonStyle="Link"
                                                          Margin="5,0"
                                                          Command="{Binding RightCommand,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                          CommandParameter="{Binding ElementName=scrollViewer}"
                                                          VerticalAlignment="Center"
                                                          HorizontalAlignment="Left"
                                                          Foreground="{StaticResource Theme}"
                                                          Content=""
                                                          FontSize="18"
                                                          FontFamily="{DynamicResource IconFont}"></local:PURepeatButton>
                                </Grid>
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                  Grid.Row="1"
                                                  ContentSource="SelectedContent"
                                                  Margin="{TemplateBinding Padding}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="SideButtonVisibility"
                                         Value="Collapsed">
                                    <Setter TargetName="btnLeft"
                                            Property="Visibility"
                                            Value="Collapsed"></Setter>
                                    <Setter TargetName="btnRight"
                                            Property="Visibility"
                                            Value="Collapsed"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TabStripPlacement"
                     Value="Bottom">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUTabControl}">
                            <Grid ClipToBounds="True"
                                  KeyboardNavigation.TabNavigation="Local"
                                  HorizontalAlignment="Stretch">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        <ColumnDefinition Width="*"></ColumnDefinition>
                                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <local:PURepeatButton x:Name="btnLeft"
                                                          Margin="5,0"
                                                          RepeatButtonStyle="Link"
                                                          Command="{Binding LeftCommand,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                          CommandParameter="{Binding ElementName=scrollViewer}"
                                                          VerticalAlignment="Center"
                                                          HorizontalAlignment="Left"
                                                          Foreground="{TemplateBinding Foreground}"
                                                          Content=""
                                                          FontSize="18"
                                                          FontFamily="{DynamicResource IconFont}"></local:PURepeatButton>
                                    <Grid  Grid.Column="1">
                                        <ScrollViewer x:Name="scrollViewer"
                                                      Style="{StaticResource MiniScrollViewer}"
                                                      VerticalScrollBarVisibility="Disabled"
                                                      HorizontalScrollBarVisibility="Hidden"
                                                      Margin="0,0,0,1"
                                                      VerticalAlignment="Stretch"
                                                      HorizontalAlignment="Stretch">
                                            <VirtualizingStackPanel Orientation="Horizontal"
                                                                    VirtualizationMode="Recycling">
                                                <TabPanel x:Name="HeaderPanel"
                                                          IsItemsHost="True"></TabPanel>
                                            </VirtualizingStackPanel>
                                        </ScrollViewer>
                                        <Border BorderThickness="0,1,0,0"
                                                Margin="{Binding Path=ActualWidth,ElementName=HeaderPanel,Converter={StaticResource WidthToMarginConverter}}"
                                                BorderBrush="{TemplateBinding BorderBrush}"></Border>
                                    </Grid>
                                    <local:PURepeatButton x:Name="btnRight"
                                                          Grid.Column="2"
                                                          RepeatButtonStyle="Link"
                                                          Margin="5,0"
                                                          Command="{Binding RightCommand,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                          CommandParameter="{Binding ElementName=scrollViewer}"
                                                          VerticalAlignment="Center"
                                                          HorizontalAlignment="Left"
                                                          Foreground="{StaticResource Theme}"
                                                          Content=""
                                                          FontSize="18"
                                                          FontFamily="{DynamicResource IconFont}"></local:PURepeatButton>
                                </Grid>
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                  ContentSource="SelectedContent"
                                                  Margin="{TemplateBinding Padding}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="SideButtonVisibility"
                                         Value="Collapsed">
                                    <Setter TargetName="btnLeft"
                                            Property="Visibility"
                                            Value="Collapsed"></Setter>
                                    <Setter TargetName="btnRight"
                                            Property="Visibility"
                                            Value="Collapsed"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TabStripPlacement"
                     Value="Left">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUTabControl}">
                            <Grid ClipToBounds="True"
                                  KeyboardNavigation.TabNavigation="Local"
                                  VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <local:PURepeatButton x:Name="btnUp"
                                                          Margin="5,0"
                                                          RepeatButtonStyle="Link"
                                                          Command="{Binding UpCommand,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                          CommandParameter="{Binding ElementName=scrollViewer}"
                                                          VerticalAlignment="Center"
                                                          HorizontalAlignment="Stretch"
                                                          Foreground="{TemplateBinding Foreground}"
                                                          Content=""
                                                          FontSize="18"
                                                          FontFamily="{DynamicResource IconFont}"></local:PURepeatButton>
                                    <Grid Grid.Row="1">
                                        <ScrollViewer x:Name="scrollViewer"
                                                      Style="{StaticResource MiniScrollViewer}"
                                                      VerticalScrollBarVisibility="Hidden"
                                                      HorizontalScrollBarVisibility="Disabled"
                                                      Margin="0,0,0,1"
                                                      VerticalAlignment="Stretch"
                                                      HorizontalAlignment="Stretch">
                                            <VirtualizingStackPanel Orientation="Horizontal"
                                                                    VirtualizationMode="Recycling">
                                                <TabPanel x:Name="HeaderPanel"
                                                          IsItemsHost="True"></TabPanel>
                                            </VirtualizingStackPanel>
                                        </ScrollViewer>
                                        <Border BorderThickness="0,0,1,0"
                                                Margin="{Binding Path=ActualHeight,ElementName=HeaderPanel,Converter={StaticResource HeightToMarginConverter}}"
                                                BorderBrush="{TemplateBinding BorderBrush}"></Border>
                                    </Grid>
                                    <local:PURepeatButton x:Name="btnDown"
                                                          Grid.Row="2"
                                                          RepeatButtonStyle="Link"
                                                          Margin="5,0"
                                                          Command="{Binding DownCommand,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                          CommandParameter="{Binding ElementName=scrollViewer}"
                                                          VerticalAlignment="Center"
                                                          HorizontalAlignment="Stretch"
                                                          Foreground="{StaticResource Theme}"
                                                          Content=""
                                                          FontSize="18"
                                                          FontFamily="{DynamicResource IconFont}"></local:PURepeatButton>
                                </Grid>
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                  Grid.Column="1"
                                                  ContentSource="SelectedContent"
                                                  Margin="{TemplateBinding Padding}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="SideButtonVisibility"
                                         Value="Collapsed">
                                    <Setter TargetName="btnUp"
                                            Property="Visibility"
                                            Value="Collapsed"></Setter>
                                    <Setter TargetName="btnDown"
                                            Property="Visibility"
                                            Value="Collapsed"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="TabStripPlacement"
                     Value="Right">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUTabControl}">
                            <Grid ClipToBounds="True"
                                  KeyboardNavigation.TabNavigation="Local"
                                  VerticalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <local:PURepeatButton x:Name="btnUp"
                                                          Margin="5,0"
                                                          RepeatButtonStyle="Link"
                                                          Command="{Binding UpCommand,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                          CommandParameter="{Binding ElementName=scrollViewer}"
                                                          VerticalAlignment="Center"
                                                          HorizontalAlignment="Stretch"
                                                          Foreground="{TemplateBinding Foreground}"
                                                          Content=""
                                                          FontSize="18"
                                                          FontFamily="{DynamicResource IconFont}"></local:PURepeatButton>
                                    <Grid Grid.Row="1">
                                        <ScrollViewer x:Name="scrollViewer"
                                                      Style="{StaticResource MiniScrollViewer}"
                                                      VerticalScrollBarVisibility="Hidden"
                                                      HorizontalScrollBarVisibility="Disabled"
                                                      Margin="0,0,0,1"
                                                      VerticalAlignment="Stretch"
                                                      HorizontalAlignment="Stretch">
                                            <VirtualizingStackPanel Orientation="Horizontal"
                                                                    VirtualizationMode="Recycling">
                                                <TabPanel x:Name="HeaderPanel"
                                                          IsItemsHost="True"></TabPanel>
                                            </VirtualizingStackPanel>
                                        </ScrollViewer>
                                        <Border BorderThickness="1,0,0,0"
                                                Margin="{Binding Path=ActualHeight,ElementName=HeaderPanel,Converter={StaticResource HeightToMarginConverter}}"
                                                BorderBrush="{TemplateBinding BorderBrush}"></Border>
                                    </Grid>
                                    <local:PURepeatButton x:Name="btnDown"
                                                          Grid.Row="2"
                                                          RepeatButtonStyle="Link"
                                                          Margin="5,0"
                                                          Command="{Binding DownCommand,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                          CommandParameter="{Binding ElementName=scrollViewer}"
                                                          VerticalAlignment="Center"
                                                          HorizontalAlignment="Stretch"
                                                          Foreground="{StaticResource Theme}"
                                                          Content=""
                                                          FontSize="18"
                                                          FontFamily="{DynamicResource IconFont}"></local:PURepeatButton>
                                </Grid>
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                  ContentSource="SelectedContent"
                                                  Margin="{TemplateBinding Padding}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="SideButtonVisibility"
                                         Value="Collapsed">
                                    <Setter TargetName="btnUp"
                                            Property="Visibility"
                                            Value="Collapsed"></Setter>
                                    <Setter TargetName="btnDown"
                                            Property="Visibility"
                                            Value="Collapsed"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type local:PUTabItem}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}"></Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="Background"
                Value="Transparent"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding TabControlStyle,RelativeSource={RelativeSource AncestorType=TabControl}}"
                         Value="General">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUTabItem}">
                            <Grid Background="{TemplateBinding Background}">
                                <StackPanel Orientation="Horizontal">
                                    <Label x:Name="lblIcon"
                                           Content="{Binding Icon,RelativeSource={RelativeSource AncestorType=TabItem}}"
                                           Margin="5,0,-10,0"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Left"
                                           Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                           FontSize="{Binding FontSize,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                           FontFamily="{DynamicResource IconFont}"></Label>
                                    <Label x:Name="lblContent"
                                           Content="{TemplateBinding Header}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Left"
                                           Margin="10,0"
                                           Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                           FontSize="{Binding FontSize,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                           FontFamily="{Binding FontFamily,RelativeSource={RelativeSource AncestorType=TabControl}}"></Label>
                                    <local:PUButton x:Name="btnDelete"
                                                    Content="×"
                                                    Command="{Binding DeleteCommand,RelativeSource={RelativeSource AncestorType=TabItem}}"
                                                    CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Left"
                                                    ButtonStyle="Link"
                                                    FontSize="15"
                                                    Margin="3,0"
                                                    Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                    Visibility="Collapsed"></local:PUButton>
                                </StackPanel>
                                <Border x:Name="bdrSelected"
                                        BorderThickness="0,0,0,1"
                                        BorderBrush="{Binding BorderBrush,RelativeSource={RelativeSource AncestorType=TabControl}}">
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Icon,RelativeSource={RelativeSource AncestorType=TabItem}}"
                                             Value="">
                                    <Setter TargetName="lblIcon"
                                            Property="Visibility"
                                            Value="Collapsed"></Setter>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                   Value="Bottom" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="bdrSelected"
                                            Property="BorderThickness"
                                            Value="0,1,0,0"></Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                   Value="Left" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="bdrSelected"
                                            Property="BorderThickness"
                                            Value="0,0,1,0"></Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                   Value="Right" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="bdrSelected"
                                            Property="BorderThickness"
                                            Value="1,0,0,0"></Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                   Value="Top" />
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="bdrSelected"
                                            Property="BorderThickness"
                                            Value="0,0,0,3"></Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                   Value="Bottom" />
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="bdrSelected"
                                            Property="BorderThickness"
                                            Value="0,3,0,0"></Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                   Value="Left" />
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="bdrSelected"
                                            Property="BorderThickness"
                                            Value="0,0,3,0"></Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                   Value="Right" />
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="bdrSelected"
                                            Property="BorderThickness"
                                            Value="3,0,0,0"></Setter>
                                </MultiDataTrigger>
                                <Trigger Property="IsSelected"
                                         Value="True">
                                    <Setter TargetName="lblIcon"
                                            Property="Foreground"
                                            Value="{Binding SelectedBrush,RelativeSource={RelativeSource AncestorType=TabControl}}"></Setter>
                                    <Setter TargetName="lblContent"
                                            Property="Foreground"
                                            Value="{Binding SelectedBrush,RelativeSource={RelativeSource AncestorType=TabControl}}"></Setter>
                                    <Setter TargetName="bdrSelected"
                                            Property="BorderBrush"
                                            Value="{Binding SelectedBrush,RelativeSource={RelativeSource AncestorType=TabControl}}"></Setter>
                                    <Setter TargetName="btnDelete"
                                            Property="Foreground"
                                            Value="{Binding SelectedBrush,RelativeSource={RelativeSource AncestorType=TabControl}}">
                                    </Setter>
                                    <Setter TargetName="btnDelete"
                                            Property="CoverBrush"
                                            Value="{Binding SelectedBrush,RelativeSource={RelativeSource AncestorType=TabControl}}">
                                    </Setter>
                                </Trigger>
                                <Trigger Property="CanDelete"
                                         Value="True">
                                    <Setter TargetName="btnDelete"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                    <Setter TargetName="lblContent"
                                            Property="Margin"
                                            Value="10,0,0,0"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding TabControlStyle,RelativeSource={RelativeSource AncestorType=TabControl}}"
                         Value="Classic">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUTabItem}">
                            <Grid Background="{TemplateBinding Background}">
                                <StackPanel Orientation="Horizontal">
                                    <Label x:Name="lblIcon"
                                           Content="{Binding Icon,RelativeSource={RelativeSource AncestorType=TabItem}}"
                                           Margin="5,0,-10,0"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Left"
                                           Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                           FontSize="{Binding FontSize,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                           FontFamily="{DynamicResource IconFont}"></Label>
                                    <Label x:Name="lblContent"
                                           Content="{TemplateBinding Header}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Left"
                                           Margin="10,0"
                                           Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                           FontSize="{Binding FontSize,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                           FontFamily="{Binding FontFamily,RelativeSource={RelativeSource AncestorType=TabControl}}"></Label>
                                    <local:PUButton x:Name="btnDelete"
                                                    Content="×"
                                                    Command="{Binding DeleteCommand,RelativeSource={RelativeSource AncestorType=TabItem}}"
                                                    CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Left"
                                                    ButtonStyle="Link"
                                                    FontSize="15"
                                                    Margin="3,0"
                                                    Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                    Visibility="Collapsed"></local:PUButton>
                                </StackPanel>
                                <Border x:Name="bdrSelected"
                                        BorderThickness="0,0,0,1"
                                        BorderBrush="{Binding BorderBrush,RelativeSource={RelativeSource AncestorType=TabControl}}">
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Icon,RelativeSource={RelativeSource Self}}"
                                             Value="">
                                    <Setter TargetName="lblIcon"
                                            Property="Visibility"
                                            Value="Collapsed"></Setter>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                   Value="Bottom" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="bdrSelected"
                                            Property="BorderThickness"
                                            Value="0,1,0,0"></Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                   Value="Left" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="bdrSelected"
                                            Property="BorderThickness"
                                            Value="0,0,1,0"></Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                   Value="Right" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="bdrSelected"
                                            Property="BorderThickness"
                                            Value="1,0,0,0"></Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                   Value="Top" />
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="bdrSelected"
                                            Property="BorderThickness"
                                            Value="1,1,1,0"></Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                   Value="Bottom" />
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="bdrSelected"
                                            Property="BorderThickness"
                                            Value="1,1,1,0"></Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                   Value="Left" />
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="bdrSelected"
                                            Property="BorderThickness"
                                            Value="1,1,0,1"></Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType=TabControl}}"
                                                   Value="Right" />
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                                   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="bdrSelected"
                                            Property="BorderThickness"
                                            Value="0,1,1,1"></Setter>
                                </MultiDataTrigger>
                                <Trigger Property="IsSelected"
                                         Value="True">
                                    <Setter TargetName="lblIcon"
                                            Property="Foreground"
                                            Value="{Binding SelectedBrush,RelativeSource={RelativeSource AncestorType=TabControl}}"></Setter>
                                    <Setter TargetName="lblContent"
                                            Property="Foreground"
                                            Value="{Binding SelectedBrush,RelativeSource={RelativeSource AncestorType=TabControl}}"></Setter>
                                    <Setter TargetName="btnDelete"
                                            Property="Foreground"
                                            Value="{Binding SelectedBrush,RelativeSource={RelativeSource AncestorType=TabControl}}">
                                    </Setter>
                                    <Setter TargetName="btnDelete"
                                            Property="CoverBrush"
                                            Value="{Binding SelectedBrush,RelativeSource={RelativeSource AncestorType=TabControl}}">
                                    </Setter>
                                </Trigger>
                                <Trigger Property="CanDelete"
                                         Value="True">
                                    <Setter TargetName="btnDelete"
                                            Property="Visibility"
                                            Value="Visible"></Setter>
                                    <Setter TargetName="lblContent"
                                            Property="Margin"
                                            Value="10,0,0,0"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:PUListBox}">
        <Setter Property="BorderThickness"
                Value="1"></Setter>
        <Setter Property="BorderBrush"
                Value="LightGray" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="DimGray"></Setter>
        <Setter Property="CoverBrush"
                Value="#22E6E6E6"></Setter>
        <Setter Property="SelectedBrush"
                Value="#E6E6E6"></Setter>
        <Setter Property="SearchBrush"
                Value="#44444444"></Setter>
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PUListBox}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}">
                        </Border>
                        <ScrollViewer Margin="0"
                                      Focusable="false">
                            <VirtualizingStackPanel Margin="2"
                                                    VirtualizationMode="Recycling"
                                                    IsItemsHost="True" />
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:PUListBoxItem}">
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="Padding"
                Value="5,0,0,0" />
        <Setter Property="Height"
                Value="30"></Setter>
        <Setter Property="BorderThickness"
                Value="0"></Setter>
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PUListBoxItem}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"></Border>
                        <Border x:Name="bdrHover"
                                Opacity="0"
                                Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=ListBox}}"></Border>
                        <Border x:Name="bdrSelected"
                                Opacity="0"
                                Background="{Binding SelectedBrush,RelativeSource={RelativeSource AncestorType=ListBox}}"></Border>
                        <Border x:Name="bdrSearched"
                                Opacity="0"
                                Background="{Binding SearchBrush,RelativeSource={RelativeSource AncestorType=ListBox}}"></Border>
                        <Label Content="{TemplateBinding Content}"
                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                               Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=ListBox}}"
                               FontSize="{Binding FontSize,RelativeSource={RelativeSource AncestorType=ListBox}}"
                               FontFamily="{Binding FontFamily,RelativeSource={RelativeSource AncestorType=ListBox}}"
                               Margin="{TemplateBinding Padding}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="bdrHover"
                                    Property="Opacity"
                                    Value="1"></Setter>
                        </Trigger>
                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter TargetName="bdrSelected"
                                    Property="Opacity"
                                    Value="1"></Setter>
                        </Trigger>
                        <EventTrigger RoutedEvent="Searched">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="bdrSearched"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="1"
                                                     Duration="0:0:0.3"></DoubleAnimation>
                                    <DoubleAnimation Storyboard.TargetName="bdrSearched"
                                                     Storyboard.TargetProperty="Opacity"
                                                     To="0"
                                                     Duration="0:0:0.3"
                                                     BeginTime="0:0:1"></DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:PUBubble}">
        <Setter Property="Background"
                Value="#666666" />
        <Setter Property="CoverBrush"
                Value="#555555" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="SnapsToDevicePixels"
                Value="False" />
        <Setter Property="Padding"
                Value="5,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PUBubble}">
                    <Grid Height="{TemplateBinding Height}"
                          Width="{TemplateBinding Width}">
                        <Path x:Name="path"
                              Stroke="{TemplateBinding BorderBrush}"
                              StrokeThickness="{TemplateBinding BorderThickness}"
                              Fill="{TemplateBinding Background}"
                              Width="{Binding ActualWidth,RelativeSource={RelativeSource AncestorType=UserControl}}"
                              Height="{Binding ActualHeight,RelativeSource={RelativeSource AncestorType=UserControl}}">
                            <Path.Data>
                                <MultiBinding Converter="{StaticResource BubbleConverter}">
                                    <Binding Path="AnglePosition"
                                             RelativeSource="{RelativeSource AncestorType=UserControl}"></Binding>
                                    <Binding Path="BorderCornerRadius"
                                             RelativeSource="{RelativeSource AncestorType=UserControl}"></Binding>
                                    <Binding Path="ActualWidth"
                                             RelativeSource="{RelativeSource AncestorType=UserControl}"></Binding>
                                    <Binding Path="ActualHeight"
                                             RelativeSource="{RelativeSource AncestorType=UserControl}"></Binding>
                                </MultiBinding>
                            </Path.Data>
                        </Path>
                        <Grid x:Name="grdContent"
                              Margin="4,0,0,0">
                            <Label Content="{TemplateBinding Content}"
                                   Foreground="{TemplateBinding Foreground}"
                                   FontSize="{TemplateBinding FontSize}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Margin="{TemplateBinding Padding}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="AnglePosition"
                                 Value="BottomLeft">
                            <Setter TargetName="grdContent"
                                    Property="Margin"
                                    Value="0,0,0,4" />
                        </Trigger>
                        <Trigger Property="AnglePosition"
                                 Value="BottomCenter">
                            <Setter TargetName="grdContent"
                                    Property="Margin"
                                    Value="0,0,0,4" />
                        </Trigger>
                        <Trigger Property="AnglePosition"
                                 Value="BottomRight">
                            <Setter TargetName="grdContent"
                                    Property="Margin"
                                    Value="0,0,0,4" />
                        </Trigger>
                        <Trigger Property="AnglePosition"
                                 Value="Right">
                            <Setter TargetName="grdContent"
                                    Property="Margin"
                                    Value="0,0,4,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="path"
                                    Property="Fill"
                                    Value="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=UserControl}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:PUContextMenu}">
        <Setter Property="Background"
                Value="White" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Foreground"
                Value="{StaticResource Theme}" />
        <Setter Property="ShadowColor"
                Value="#44444444" />
        <Setter Property="CoverBrush"
                Value="#33AAAAAA" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PUContextMenu}">
                    <Grid Margin="5">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0"
                                                  Color="{Binding ShadowColor,RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                  BlurRadius="5" />
                            </Border.Effect>
                        </Border>
                        <ScrollViewer CanContentScroll="True"
                                      Margin="0,3"
                                      Style="{StaticResource MiniScrollViewer}">
                            <VirtualizingStackPanel ClipToBounds="True"
                                                    VirtualizationMode="Recycling"
                                                    Orientation="Vertical"
                                                    IsItemsHost="True" />
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:PUContextMenuItem}">
        <Setter Property="Foreground"
                Value="{StaticResource Theme}" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Height"
                Value="35" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PUContextMenuItem}">
                    <Grid>
                        <Border x:Name="bdrHover"
                                Opacity="0"
                                Background="{Binding CoverBrush,RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Label x:Name="lblIcon"
                                   Content="{Binding Icon,RelativeSource={RelativeSource AncestorType=MenuItem}}"
                                   Height="{TemplateBinding Height}"
                                   Width="{TemplateBinding Height}"
                                   VerticalContentAlignment="Center"
                                   HorizontalContentAlignment="Center"
                                   FontFamily="{DynamicResource IconFont}"
                                   Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                   Margin="0,0,5,0" />
                            <Label x:Name="content"
                                   Grid.Column="1"
                                   Content="{TemplateBinding Header}"
                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   FontFamily="{Binding FontFamily,RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                   Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                   Margin="0,0,5,0" />
                            <Path x:Name="path"
                                  Height="15"
                                  Width="15"
                                  Margin="10,0,5,0"
                                  Grid.Column="2"
                                  Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                  Data="M7,3 V 12 L 12.5,7.5 Z">
                            </Path>
                        </Grid>
                        <Popup x:Name="Popup"
                               Placement="Right"
                               IsOpen="{TemplateBinding IsSubmenuOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Fade">
                            <Grid>
                                <Border x:Name="SubmenuBorder"
                                        BorderBrush="{Binding BorderBrush,RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                        BorderThickness="{Binding BorderThickness,RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                        Background="{Binding Background,RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                        CornerRadius="{Binding BorderCornerRadius,RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                        Margin="0,5">
                                    <Border.Effect>
                                        <DropShadowEffect ShadowDepth="0"
                                                          Color="{Binding ShadowColor,RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                          BlurRadius="5" />
                                    </Border.Effect>
                                </Border>
                                <ScrollViewer CanContentScroll="True"
                                              Margin="0,3"
                                              Style="{StaticResource MiniScrollViewer}">
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </ScrollViewer>
                            </Grid>

                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="bdrHover"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1"
                                                         Duration="0:0:0.4" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="bdrHover"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0"
                                                         Duration="0:0:0.4" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="HasItems"
                                 Value="False">
                            <Setter TargetName="path"
                                    Property="Visibility"
                                    Value="Hidden" />
                        </Trigger>
                        <Trigger Property="Icon"
                                 Value="{x:Null}">
                            <Setter TargetName="lblIcon"
                                    Property="Visibility"
                                    Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:PUSplitLine}">
        <Setter Property="BorderBrush"
                Value="{StaticResource Theme}"></Setter>
        <Setter Property="BorderThickness"
                Value="1"></Setter>
        <Style.Triggers>
            <Trigger Property="Alignment"
                     Value="Top">
                <Setter Property="VerticalAlignment"
                        Value="Top"></Setter>
                <Setter Property="Height"
                        Value="1"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUSplitLine}">
                            <Border Height="{Binding BorderThickness,RelativeSource={RelativeSource AncestorType=Control}}"
                                    Width="{TemplateBinding Width}"
                                    Background="{Binding BorderBrush,RelativeSource={RelativeSource AncestorType=Control}}"
                                    Margin="{TemplateBinding Padding}">
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Trigger>
            <Trigger Property="Alignment"
                     Value="Bottom">
                <Setter Property="VerticalAlignment"
                        Value="Bottom"></Setter>
                <Setter Property="Height"
                        Value="1"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUSplitLine}">
                            <Border Height="{Binding BorderThickness,RelativeSource={RelativeSource AncestorType=Control}}"
                                    Width="{TemplateBinding Width}"
                                    Background="{Binding BorderBrush,RelativeSource={RelativeSource AncestorType=Control}}"
                                    Margin="{TemplateBinding Padding}">
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Trigger>
            <Trigger Property="Alignment"
                     Value="Left">
                <Setter Property="HorizontalAlignment"
                        Value="Left"></Setter>
                <Setter Property="Width"
                        Value="1"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUSplitLine}">
                            <Border Width="{Binding BorderThickness,RelativeSource={RelativeSource AncestorType=Control}}"
                                    Height="{TemplateBinding Height}"
                                    Background="{Binding BorderBrush,RelativeSource={RelativeSource AncestorType=Control}}"
                                    Margin="{TemplateBinding Padding}">
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Trigger>
            <Trigger Property="Alignment"
                     Value="Right">
                <Setter Property="HorizontalAlignment"
                        Value="Right"></Setter>
                <Setter Property="Width"
                        Value="1"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:PUSplitLine}">
                            <Border Width="{Binding BorderThickness,RelativeSource={RelativeSource AncestorType=Control}}"
                                    Height="{TemplateBinding Height}"
                                    Background="{Binding BorderBrush,RelativeSource={RelativeSource AncestorType=Control}}"
                                    Margin="{TemplateBinding Padding}">
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type local:Countdown}">
        <Setter Property="FontFamily"
                Value="{StaticResource Default_FontFamily}" />
        <Setter Property="SnapsToDevicePixels"
                Value="{StaticResource Default_SnapsToDevicePixels}" />
        <Setter Property="FontSize"
                Value="{StaticResource Default_FontSize}" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Second"
                Value="5" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Foreground"
                Value="#3E3E3E" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Countdown}">
                    <Border VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <TextBlock Text="{Binding Second,RelativeSource={RelativeSource AncestorType=local:Countdown}}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   Foreground="{TemplateBinding Foreground}"
                                   FontSize="{TemplateBinding FontSize}"
                                   FontWeight="{TemplateBinding FontWeight}"
                                   FontFamily="{TemplateBinding FontFamily}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
